Index: app/src/main/java/com/example/cps731project/SignUp.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cps731project;\n\nimport androidx.appcompat.app.AppCompatActivity;\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.ProgressBar;\nimport android.widget.TextView;\nimport com.google.firebase.auth.FirebaseAuth;\n\npublic class SignUp extends AppCompatActivity implements View.OnClickListener {\n    private EditText mName, mEmail, mPassword;\n    private Button register;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_sign_up);\n\n        FirebaseAuth fAuth = FirebaseAuth.getInstance();\n\n        TextView login = findViewById(R.id.haveAccount);\n        login.setOnClickListener(this);\n\n        register = findViewById(R.id.btnRegister);\n        register.setOnClickListener(this);\n\n        mName = findViewById(R.id.name);\n        mEmail = findViewById(R.id.email);\n        mPassword = findViewById(R.id.password);\n        ProgressBar progress2 = findViewById(R.id.progressBar2);\n    }\n\n    @Override\n    public void onClick(View v) {\n        if (v.getId() == R.id.haveAccount) {\n            startActivity(new Intent(this, Login.class));\n        } else if (v.getId() == R.id.btnRegister) {\n            registerUser();\n        }\n    }\n\n    private void registerUser() {\n        String name = mName.getText().toString().trim();\n        String email = mEmail.getText().toString().trim();\n        String password = mPassword.getText().toString().trim();\n\n        if(name.isEmpty()) {\n            mName.setError(\"Full name is required!\");\n            mName.requestFocus();\n            return;\n        }\n        if(email.isEmpty()) {\n            mEmail.setError(\"Email is required!\");\n            mEmail.requestFocus();\n            return;\n        }\n        if(password.isEmpty()) {\n            mPassword.setError(\"Password is required!\");\n            mPassword.requestFocus();\n            return;\n        }\n        if(password.length() < 6) {\n            mPassword.setError(\"Password should be at least 6 characters!\");\n        }\n\n    }\n}\n    /*public static final String EMAIL_KEY = \"email\";\n    public static final String NAME_KEY = \"name\";\n    public static final String PASSWORD_KEY = \"password\";\n    public static final String TAG = \"TAG\";\n    private EditText name, email, password;\n    private Button register;\n    private FirebaseAuth fAuth;\n    private ProgressBar progress2;\n    FirebaseFirestore db;\n    String userID;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_sign_up);\n\n        name = findViewById(R.id.name);\n        email = findViewById(R.id.email);\n        password = findViewById(R.id.password);\n        register = findViewById(R.id.btnRegister);\n\n        fAuth = FirebaseAuth.getInstance();\n        db = FirebaseFirestore.getInstance();\n        progress2 = findViewById(R.id.progressBar2);\n\n        if (fAuth.getCurrentUser() != null) {\n            startActivity(new Intent(getApplicationContext(), MainActivity.class));\n            finish();\n        }\n\n        register.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                final String regName = name.getText().toString();\n                final String regEmail = email.getText().toString().trim();\n                final String regPassword = password.getText().toString().trim();\n\n\n                if (regEmail.equals(\"\")) {\n                    email.setError(\"Email is required\");\n                }\n                if (regPassword.equals(\"\")) {\n                    email.setError(\"Email is required\");\n                }\n                if (password.length() < 6) {\n                    password.setError(\"Password must be at least 6 Characters\");\n                    return;\n                }\n\n                progress2.setVisibility(View.VISIBLE);\n\n                fAuth.createUserWithEmailAndPassword(regName, regEmail)\n                        .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {\n                            @Override\n                            public void onComplete(@NonNull Task<AuthResult> task) {\n                                if (task.isSuccessful()) {\n                                    Toast.makeText(SignUp.this, \"User Created.\", Toast.LENGTH_SHORT).show();\n                                    userID = fAuth.getCurrentUser().getUid();\n                                    DocumentReference doc = db.collection(\"users\").document(userID);\n                                    Map<String, Object> newUser = new HashMap<>();\n                                    newUser.put(NAME_KEY, regName);\n                                    newUser.put(EMAIL_KEY, regEmail);\n                                    newUser.put(PASSWORD_KEY, regPassword);\n                                    doc.set(newUser).addOnSuccessListener(new OnSuccessListener<Void>() {\n                                        @Override\n                                        public void onSuccess(Void aVoid) {\n                                            Log.d(TAG, \"onSuccess: user Profile is created for \" + userID);\n                                        }\n                                    });\n                                    startActivity(new Intent(getApplicationContext(), MainActivity.class));\n                                } else {\n                                    Toast.makeText(SignUp.this, \"Error!\" + task.getException().getMessage(), Toast.LENGTH_SHORT).show();\n                                    progress2.setVisibility(View.GONE);\n                                }\n\n                            }\n\n                        });\n            }\n        });\n    }\n    public static final String EMAIL_KEY = \"email\";\n    public static final String NAME_KEY = \"name\";\n    public static final String PASSWORD_KEY = \"password\";\n\n    private Button register;\n    private EditText name;\n    private EditText email;\n    private EditText password;\n    private ProgressBar progress2;\n\n    FirebaseFirestore db = FirebaseFirestore.getInstance();\n    DocumentReference ref;// = db.collection(\"users\").document();\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_sign_up);\n\n        ref = db.collection(\"users\").document(\"email\");\n\n        progress2 = findViewById(R.id.progressBar2);\n        register = findViewById(R.id.btnRegister);\n        register.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                name = findViewById(R.id.name);\n                email = findViewById(R.id.email);\n                password = findViewById(R.id.password);\n\n                final String reg_name = name.getText().toString();\n                final String reg_email = email.getText().toString();\n                final String reg_password = password.getText().toString();\n\n                if(reg_name.isEmpty() || reg_email.isEmpty() || reg_password.isEmpty()) {\n                    Toast.makeText(SignUp.this, \"Text fields cannot be empty\", Toast.LENGTH_SHORT).show();\n                }\n                else if(reg_name.equals(\"\")){\n                    Toast.makeText(SignUp.this, \"Please enter your name\", Toast.LENGTH_SHORT).show();\n                }\n                else if(reg_email.equals(\"\")){\n                    Toast.makeText(SignUp.this, \"Please enter an email address\", Toast.LENGTH_SHORT).show();\n                }\n                else if(reg_password.equals(\"\")){\n                    Toast.makeText(SignUp.this, \"Please enter a password\", Toast.LENGTH_SHORT).show();\n                }\n                else {\n\n                    //This part is supposed to check if account already exists but it's not working not sure why\n                    ref.get().addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\n                        @Override\n\n                        public void onSuccess(DocumentSnapshot documentSnapshot) {\n                            progress2.setVisibility(View.VISIBLE);\n                            if (documentSnapshot.exists()){\n                                Toast.makeText(SignUp.this, \"Sorry,this user already exists\", Toast.LENGTH_SHORT).show();\n                                progress2.setVisibility(View.INVISIBLE);\n                            }else{\n                                Map<String, Object> newuser = new HashMap<>();\n                                newuser.put(NAME_KEY, reg_name);\n                                newuser.put(EMAIL_KEY, reg_email);\n                                newuser.put(PASSWORD_KEY, reg_password);\n\n                                db.collection(\"users\")\n                                        .add(newuser)\n                                        .addOnSuccessListener(new OnSuccessListener<DocumentReference>() {\n                                            @Override\n                                            public void onSuccess(DocumentReference documentReference) {\n                                                Toast.makeText(SignUp.this, \"Account successfully created\", Toast.LENGTH_SHORT).show();\n                                                startActivity(new Intent(SignUp.this, MainActivity.class));\n                                            }\n                                        })\n                                        .addOnFailureListener(new OnFailureListener() {\n                                            @Override\n                                            public void onFailure(@NonNull Exception e) {\n                                                Toast.makeText(SignUp.this, \"Error creating account\", Toast.LENGTH_LONG).show();\n                                                Log.d(\"Error\", e.getMessage());\n                                            }\n                                        });\n                            }\n                        }\n                    });\n\n                }\n            }\n        });\n        TextView hasAccount = findViewById(R.id.haveAccount);\n        hasAccount.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                startActivity(new Intent(SignUp.this, Login.class));\n            }\n        });*/
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/cps731project/SignUp.java	(revision 9530ff3be2eeefef49243de38dd8a13106c483d1)
+++ app/src/main/java/com/example/cps731project/SignUp.java	(date 1605430358218)
@@ -1,73 +1,184 @@
 package com.example.cps731project;
 
+import androidx.annotation.NonNull;
 import androidx.appcompat.app.AppCompatActivity;
+
 import android.content.Intent;
 import android.os.Bundle;
+import android.util.Log;
 import android.view.View;
 import android.widget.Button;
 import android.widget.EditText;
 import android.widget.ProgressBar;
 import android.widget.TextView;
-import com.google.firebase.auth.FirebaseAuth;
+import android.widget.Toast;
+
+import com.google.android.gms.tasks.OnCompleteListener;
+import com.google.android.gms.tasks.OnFailureListener;
+import com.google.android.gms.tasks.OnSuccessListener;
+//import com.google.firebase.auth.FirebaseAuth;
+import com.google.android.gms.tasks.Task;
+import com.google.firebase.firestore.CollectionReference;
+import com.google.firebase.firestore.DocumentReference;
+import com.google.firebase.firestore.DocumentSnapshot;
+import com.google.firebase.firestore.FirebaseFirestore;
+import com.google.firebase.firestore.Query;
+import com.google.firebase.firestore.QuerySnapshot;
 
-public class SignUp extends AppCompatActivity implements View.OnClickListener {
+import java.util.HashMap;
+import java.util.Map;
+
+public class SignUp extends AppCompatActivity {
+    private static final String TAG = "TAG";
+    //public static final String EMAIL_KEY = "email";
+    //public static final String NAME_KEY = "name";
+    //public static final String PASSWORD_KEY = "password";
     private EditText mName, mEmail, mPassword;
-    private Button register;
+    //private FirebaseAuth fAuth;
+    private FirebaseFirestore db;
+    private ProgressBar progress2;
+    DocumentReference doc;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_sign_up);
 
-        FirebaseAuth fAuth = FirebaseAuth.getInstance();
-
         TextView login = findViewById(R.id.haveAccount);
-        login.setOnClickListener(this);
-
-        register = findViewById(R.id.btnRegister);
-        register.setOnClickListener(this);
-
+        Button register = findViewById(R.id.btnRegister);
         mName = findViewById(R.id.name);
         mEmail = findViewById(R.id.email);
         mPassword = findViewById(R.id.password);
-        ProgressBar progress2 = findViewById(R.id.progressBar2);
-    }
+        progress2 = findViewById(R.id.progressBar2);
 
-    @Override
-    public void onClick(View v) {
-        if (v.getId() == R.id.haveAccount) {
-            startActivity(new Intent(this, Login.class));
-        } else if (v.getId() == R.id.btnRegister) {
-            registerUser();
-        }
-    }
-
-    private void registerUser() {
-        String name = mName.getText().toString().trim();
-        String email = mEmail.getText().toString().trim();
-        String password = mPassword.getText().toString().trim();
+        db = FirebaseFirestore.getInstance();
+        doc = db.collection("users").document();
+
+        register.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                final String name = mName.getText().toString();
+                final String email = mEmail.getText().toString();
+                final String password = mPassword.getText().toString();
 
-        if(name.isEmpty()) {
-            mName.setError("Full name is required!");
-            mName.requestFocus();
-            return;
-        }
-        if(email.isEmpty()) {
-            mEmail.setError("Email is required!");
-            mEmail.requestFocus();
-            return;
-        }
-        if(password.isEmpty()) {
-            mPassword.setError("Password is required!");
-            mPassword.requestFocus();
-            return;
-        }
-        if(password.length() < 6) {
-            mPassword.setError("Password should be at least 6 characters!");
-        }
+                if (name.isEmpty()) {
+                    mName.setError("Full name is required!");
+                    mName.requestFocus();
+                } else if (email.isEmpty()) {
+                    mEmail.setError("Email is required!");
+                    mEmail.requestFocus();
+                } else if (password.isEmpty()) {
+                    mPassword.setError("Password is required!");
+                    mPassword.requestFocus();
+                } else if (password.length() < 6) {
+                    mPassword.setError("Password should be at least 6 characters!");
+                    mPassword.requestFocus();
+                } else {
+                    CollectionReference usersRef = db.collection("users");
+                    Query query = usersRef.whereEqualTo("email", email);
+                    query.get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {
+                        @Override
+                        public void onComplete(@NonNull Task<QuerySnapshot> task) {
+                            progress2.setVisibility(View.VISIBLE);
+                            if (task.isSuccessful()) {
+                                for(DocumentSnapshot documentSnapshot : task.getResult()) {
+                                    String eMail = documentSnapshot.getString("email");
+
+                                    if (eMail.equals(email)) {
+                                        Log.d(TAG, "User Exists");
+                                        Toast.makeText(SignUp.this, "Email exists", Toast.LENGTH_SHORT).show();
+                                        progress2.setVisibility(View.GONE);
+                                    }
+                                }
+                            }
+                            if(task.getResult().size() == 0 ){
+                                Map<String, Object> reg_entry = new HashMap<>();
+                                reg_entry.put("email", email);
+                                reg_entry.put("name", name);
+                                reg_entry.put("password", password);
 
+                                //   String myId = ref.getId();
+                                db.collection("users")
+                                        .add(reg_entry)
+                                        .addOnSuccessListener(new OnSuccessListener<DocumentReference>() {
+                                            @Override
+                                            public void onSuccess(DocumentReference documentReference) {
+                                                progress2.setVisibility(View.VISIBLE);
+                                                Toast.makeText(SignUp.this, "Successfully added", Toast.LENGTH_SHORT).show();
+                                                startActivity(new Intent(SignUp.this, Login.class));
+                                            }
+                                        })
+                                        .addOnFailureListener(new OnFailureListener() {
+                                            @Override
+                                            public void onFailure(@NonNull Exception e) {
+                                                Log.d("Error", e.getMessage());
+                                            }
+                                        });
+                                progress2.setVisibility(View.GONE);
+                            }
+                        }
+                    });
+                }
+            }
+        });
+        login.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                startActivity(new Intent(SignUp.this, Login.class));
+            }
+        });
     }
 }
+        /*fAuth.createUserWithEmailAndPassword(email, password)
+                .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {
+                    @Override
+                    public void onComplete(@NonNull Task<AuthResult> task) {
+                        if (task.isSuccessful()) {
+                            // Sign in success, update UI with the signed-in user's information
+                            Log.d(TAG, "createUserWithEmail:success");
+                            DocumentReference docRef = db.collection("users").document();
+                            // Add document data using a hashmap
+                            Map<String, Object> user = new HashMap<>();
+                            user.put(NAME_KEY, name);
+                            user.put(EMAIL_KEY, email);
+                            user.put(PASSWORD_KEY, password);
+                            //asynchronously write data
+                            docRef.set(user);
+                            Toast.makeText(SignUp.this, "Account successfully created", Toast.LENGTH_SHORT).show();
+                            startActivity(new Intent(SignUp.this, MainActivity.class));
+                        }
+                        else {
+                            // If sign in fails, display a message to the user.
+                            Log.w(TAG, "createUserWithEmail:failure", task.getException());
+                            Toast.makeText(SignUp.this, "Authentication failed.",
+                                    Toast.LENGTH_SHORT).show();
+                        }
+                        progress2.setVisibility(View.GONE);
+                    }
+                });
+        /*progress2.setVisibility(View.VISIBLE);
+        fAuth.createUserWithEmailAndPassword(email, password)
+                .addOnCompleteListener(new OnCompleteListener<AuthResult>() {
+                    @Override
+                    public void onComplete(@NonNull Task<AuthResult> task) {
+                        if (task.isSuccessful()) {
+                            User user = new User(name, email);
+                            Log.d(TAG, "signInWithEmail:success");
+                        } else {
+                            // If sign in fails, display a message to the user.
+                            Log.w(TAG, "signInWithEmail:failure", task.getException());
+                            Toast.makeText(SignUp.this, "Authentication failed.",
+                                    Toast.LENGTH_SHORT).show();
+                        }
+                        if (!task.isSuccessful()) {
+                            Toast.makeText(SignUp.this, "Authentication failed.",
+                                    Toast.LENGTH_SHORT).show();
+                        }
+                        progress2.setVisibility(View.GONE);
+                    }
+                });*/
+
+
     /*public static final String EMAIL_KEY = "email";
     public static final String NAME_KEY = "name";
     public static final String PASSWORD_KEY = "password";
Index: app/src/main/java/com/example/cps731project/Login.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cps731project;\n\nimport android.os.Bundle;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.Toast;\n\nimport com.google.firebase.auth.FirebaseAuth;\n\nimport androidx.appcompat.app.AppCompatActivity;\n\n//import android.widget.ProgressBar;\n\n\npublic class Login extends AppCompatActivity {\n\n    private EditText logEmail;\n    private EditText logPassword;\n\n    private final FirebaseAuth db = FirebaseAuth.getInstance();\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_login);\n\n        logEmail = findViewById(R.id.loginEmail);\n        logPassword = findViewById(R.id.loginPassword);\n        Button login = findViewById(R.id.btnLogin);\n        //ProgressBar progress = findViewById(R.id.progressBar);\n\n        login.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                final String userEmail = logEmail.getText().toString().trim();\n                final String userPassword = logPassword.getText().toString();\n\n                if (userEmail.isEmpty() || userPassword.isEmpty()) {\n                    Toast.makeText(Login.this, \"Text fields cannot be empty\", Toast.LENGTH_SHORT).show();\n                }\n            }\n        });\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/cps731project/Login.java	(revision 9530ff3be2eeefef49243de38dd8a13106c483d1)
+++ app/src/main/java/com/example/cps731project/Login.java	(date 1605430063270)
@@ -1,9 +1,11 @@
 package com.example.cps731project;
 
+import android.content.Intent;
 import android.os.Bundle;
 import android.view.View;
 import android.widget.Button;
 import android.widget.EditText;
+import android.widget.TextView;
 import android.widget.Toast;
 
 import com.google.firebase.auth.FirebaseAuth;
@@ -24,7 +26,7 @@
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_login);
-
+        TextView createAccount = findViewById(R.id.dontHaveAccount);
         logEmail = findViewById(R.id.loginEmail);
         logPassword = findViewById(R.id.loginPassword);
         Button login = findViewById(R.id.btnLogin);
@@ -41,5 +43,11 @@
                 }
             }
         });
+        createAccount.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                startActivity(new Intent(Login.this, SignUp.class));
+            }
+        });
     }
 }
\ No newline at end of file
Index: app/src/main/java/com/example/cps731project/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/cps731project/User.java	(date 1605410790775)
+++ app/src/main/java/com/example/cps731project/User.java	(date 1605410790775)
@@ -0,0 +1,14 @@
+package com.example.cps731project;
+
+public class User {
+    public String fullName, email;
+
+    public User() {
+
+    }
+
+    public User(String fullName, String email) {
+        this.fullName = fullName;
+        this.email = email;
+    }
+}
