Index: app/src/main/java/com/example/cps731project/ViewAccount.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cps731project;\n\nimport android.annotation.SuppressLint;\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.view.MenuItem;\nimport android.view.View;\nimport android.widget.Button;\n\nimport com.google.android.material.bottomnavigation.BottomNavigationView;\nimport com.google.firebase.firestore.DocumentReference;\nimport com.google.firebase.firestore.FirebaseFirestore;\n\nimport androidx.annotation.NonNull;\nimport androidx.appcompat.app.AppCompatActivity;\n\npublic class ViewAccount extends AppCompatActivity {\n\n    FirebaseFirestore db;\n    DocumentReference doc;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_view_account);\n\n        BottomNavigationView bottomNavigationView = findViewById(R.id.bottomNav);\n        bottomNavigationView.setSelectedItemId(R.id.viewAccount);\n        bottomNavigationView.setOnNavigationItemSelectedListener(new BottomNavigationView.OnNavigationItemSelectedListener() {\n            @SuppressLint(\"NonConstantResourceId\")\n            @Override\n            public boolean onNavigationItemSelected(@NonNull MenuItem item) {\n                switch (item.getItemId()) {\n                    case R.id.mainActivity:\n                        startActivity(new Intent(getApplicationContext(), MainActivity.class));\n                        overridePendingTransition(0, 0);\n                        return true;\n                    case R.id.grocery:\n                        startActivity(new Intent(getApplicationContext(), MapsActivity.class));\n                        overridePendingTransition(0, 0);\n                        return true;\n                    case R.id.viewFavourites:\n                        startActivity(new Intent(getApplicationContext(), ViewFavourites.class));\n                        overridePendingTransition(0, 0);\n                        return true;\n                    case R.id.viewHistory:\n                        startActivity(new Intent(getApplicationContext(), ViewHistory.class));\n                        overridePendingTransition(0, 0);\n                        return true;\n                    case R.id.viewAccount:\n                        return true;\n                }\n                return false;\n            }\n        });\n\n        final String id = UserID.user_id;\n        db = FirebaseFirestore.getInstance();\n        doc = db.collection(\"users\").document(id);\n\n\n        /*final TextView userNameTxt = (TextView) findViewById(R.id.txtName);\n        final TextView userEmailTxt = (TextView) findViewById(R.id.txtEmail);\n        doc.get().addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\n            @Override\n            public void onSuccess(DocumentSnapshot documentSnapshot) {\n                String userName = documentSnapshot.getString(\"name\");\n                String userEmail = documentSnapshot.getString(\"email\");\n                userNameTxt.setText(userName);\n                userEmailTxt.setText(userEmail);\n            }\n        });*/\n\n        //LOGOUT BUTTON\n        Button logout = findViewById(R.id.btnLogout);\n        logout.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                startActivity(new Intent(ViewAccount.this, Login.class));\n            }\n        });\n\n        //DELETE ACCOUNT BUTTON\n        Button deleteAcc = findViewById(R.id.btnDeleteAcc);\n        deleteAcc.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                /*CollectionReference usersRef = db.collection(\"users\");\n                Query query = usersRef.whereEqualTo(\"email\", id);\n                query.get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\n                    @Override\n                    public void onComplete(@NonNull Task<QuerySnapshot> task) {\n                        if(task.isSuccessful()){\n                            doc.delete();\n                        }\n                    }\n                });*/\n\n                doc.delete();\n                startActivity(new Intent(ViewAccount.this, Login.class));\n            }\n        });\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/cps731project/ViewAccount.java	(revision c21de9b9ee0e409d6cc551c8d92029896677594f)
+++ app/src/main/java/com/example/cps731project/ViewAccount.java	(date 1606701613666)
@@ -36,7 +36,7 @@
                         overridePendingTransition(0, 0);
                         return true;
                     case R.id.grocery:
-                        startActivity(new Intent(getApplicationContext(), MapsActivity.class));
+                        startActivity(new Intent(getApplicationContext(), TestActivity.class));
                         overridePendingTransition(0, 0);
                         return true;
                     case R.id.viewFavourites:
Index: app/src/main/java/com/example/cps731project/MapsActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cps731project;\n\nimport android.os.Bundle;\n\nimport com.google.android.gms.maps.CameraUpdateFactory;\nimport com.google.android.gms.maps.GoogleMap;\nimport com.google.android.gms.maps.OnMapReadyCallback;\nimport com.google.android.gms.maps.SupportMapFragment;\nimport com.google.android.gms.maps.model.LatLng;\nimport com.google.android.gms.maps.model.MarkerOptions;\n\nimport androidx.fragment.app.FragmentActivity;\n\npublic class MapsActivity extends FragmentActivity implements OnMapReadyCallback {\n    private GoogleMap mMap;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_maps);\n        // Obtain the SupportMapFragment and get notified when the map is ready to be used.\n\n        SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager()\n                .findFragmentById(R.id.map);\n        assert mapFragment != null;\n        mapFragment.getMapAsync(this);\n    }\n\n    @Override\n    public void onMapReady(GoogleMap googleMap) {\n        mMap = googleMap;\n\n        // Add a marker in Toronto and move the camera\n        LatLng Toronto = new LatLng(43.6532, -79.3832);\n        mMap.addMarker(new MarkerOptions()\n                .position(Toronto)\n                .title(\"Marker in Toronto\"));\n        mMap.moveCamera(CameraUpdateFactory.newLatLng(Toronto));\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/cps731project/MapsActivity.java	(revision c21de9b9ee0e409d6cc551c8d92029896677594f)
+++ app/src/main/java/com/example/cps731project/MapsActivity.java	(date 1606746063872)
@@ -1,32 +1,237 @@
 package com.example.cps731project;
 
+import android.Manifest;
+import android.content.pm.PackageManager;
+import android.location.Address;
+import android.location.Geocoder;
+import android.location.Location;
 import android.os.Bundle;
+import android.util.Log;
+import android.view.KeyEvent;
+import android.view.View;
+import android.view.inputmethod.EditorInfo;
+import android.widget.EditText;
+import android.widget.RelativeLayout;
+import android.widget.TextView;
+import android.widget.Toast;
 
+import com.google.android.gms.location.FusedLocationProviderClient;
+import com.google.android.gms.location.LocationServices;
 import com.google.android.gms.maps.CameraUpdateFactory;
 import com.google.android.gms.maps.GoogleMap;
 import com.google.android.gms.maps.OnMapReadyCallback;
 import com.google.android.gms.maps.SupportMapFragment;
 import com.google.android.gms.maps.model.LatLng;
 import com.google.android.gms.maps.model.MarkerOptions;
+import com.google.android.gms.tasks.OnCompleteListener;
+import com.google.android.gms.tasks.Task;
+
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.List;
+
+import androidx.annotation.NonNull;
+import androidx.appcompat.app.AppCompatActivity;
+import androidx.core.app.ActivityCompat;
+import androidx.core.content.ContextCompat;
+
+public class MapsActivity extends AppCompatActivity implements OnMapReadyCallback {
+
+    @Override
+    public void onMapReady(GoogleMap googleMap) {
+        Toast.makeText(this, "Map is ready", Toast.LENGTH_SHORT).show();
+        Log.d(TAG, "onMapReady: ready");
+        mMap = googleMap;
+
+        if (mLocationPermissionsGranted) {
+            getDeviceLocation();
+
+            if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION)
+                    != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this,
+                    Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
+                return;
+            }
+            mMap.setMyLocationEnabled(true);
+            mMap.getUiSettings().setMyLocationButtonEnabled(true);
+
+            init();
+        }
+    }
 
-import androidx.fragment.app.FragmentActivity;
+    private static final String TAG = "MapsActivity";
+    private static final String FINE_LOCATION = Manifest.permission.ACCESS_FINE_LOCATION;
+    private static final String COARSE_LOCATION = Manifest.permission.ACCESS_COARSE_LOCATION;
+    private static final int LOCATION_PERMISSION_REQUEST_CODE = 1234;
 
-public class MapsActivity extends FragmentActivity implements OnMapReadyCallback {
+    //widgets
+    private EditText mSearchText;
+    View mapView;
+
+    //vars
+    private Boolean mLocationPermissionsGranted = false;
     private GoogleMap mMap;
+    private static final float DEFAULT_ZOOM = 15f;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_maps);
-        // Obtain the SupportMapFragment and get notified when the map is ready to be used.
+        mSearchText = (EditText) findViewById(R.id.input_search);
+
+        getLocationPermission();
+
+    }
+
+    private void init() {
+        Log.d(TAG, "init: initializing");
+
+        if (mapView != null &&
+                mapView.findViewById(Integer.parseInt("1")) != null) {
+            // Get the button view
+            View locationButton = ((View) mapView.findViewById(Integer.parseInt("1")).getParent()).findViewById(Integer.parseInt("2"));
+            // and next place it, on bottom right (as Google Maps app)
+            RelativeLayout.LayoutParams layoutParams = (RelativeLayout.LayoutParams)
+                    locationButton.getLayoutParams();
+            // position on right bottom
+            layoutParams.addRule(RelativeLayout.ALIGN_PARENT_TOP, 0);
+            layoutParams.addRule(RelativeLayout.ALIGN_PARENT_BOTTOM, RelativeLayout.TRUE);
+            layoutParams.setMargins(0, 0, 30, 30);
+        }
+
+        mSearchText.setOnEditorActionListener(new TextView.OnEditorActionListener() {
+            @Override
+            public boolean onEditorAction(TextView v, int actionId, KeyEvent event) {
+                if(actionId == EditorInfo.IME_ACTION_SEARCH
+                    || actionId == EditorInfo.IME_ACTION_DONE
+                    || event.getAction() == KeyEvent.ACTION_DOWN
+                    || event.getAction() == KeyEvent.KEYCODE_ENTER) {
+
+                    //execute our method for searching
+                    geoLocate();
+
+                }
+                return false;
+            }
+        });
+    }
 
+    private void geoLocate(){
+        Log.d(TAG, "geoLocate: geolocating");
+
+        String searchString = mSearchText.getText().toString();
+
+        Geocoder geocoder = new Geocoder(MapsActivity.this);
+        List<Address> list = new ArrayList<>();
+        try {
+            list = geocoder.getFromLocationName(searchString, 1);
+        }
+        catch (IOException e) {
+            Log.e(TAG, "geoLocate: IOException: " + e.getMessage());
+        }
+        if(list.size() > 0) {
+            Address address = list.get(0);
+            Log.d(TAG, "geoLocate: found a location: " + address.toString());
+            //Toast.makeText(this, address.toString(), Toast.LENGTH_SHORT).show();
+            moveCamera(new LatLng(address.getLatitude(), address.getLongitude()), address.getAddressLine(0));
+        }
+    }
+
+    private void getDeviceLocation() {
+        Log.d(TAG, "getDeviceLocation: getting the devices current location");
+        FusedLocationProviderClient mFusedLocationProviderClient = LocationServices.getFusedLocationProviderClient(this);
+
+        try {
+            if(mLocationPermissionsGranted){
+                Task location = mFusedLocationProviderClient.getLastLocation();
+                location.addOnCompleteListener(new OnCompleteListener() {
+                    @Override
+                    public void onComplete(@NonNull Task task) {
+                        if(task.isSuccessful()){
+                            Log.d(TAG, "onComplete: found location!");
+                            Location currentLocation = (Location) task.getResult();
+                            moveCamera(new LatLng(currentLocation.getLatitude(),
+                                    currentLocation.getLongitude()), "My Location");
+                        }
+                        else {
+                            Log.d(TAG, "onComplete: current location is null");
+                            Toast.makeText(MapsActivity.this, "unable to get current location", Toast.LENGTH_SHORT).show();
+                        }
+                    }
+                });
+            }
+        }
+        catch (SecurityException e) {
+            Log.d(TAG, "getDeviceLocation: SecurityException: " + e.getMessage());
+        }
+    }
+
+    private void moveCamera(LatLng latLng, String title) {
+        Log.d(TAG, "moveCamera: moving the camera to: lat:  " + latLng.latitude + ", lng: " + latLng.longitude);
+        mMap.moveCamera(CameraUpdateFactory.newLatLngZoom(latLng, MapsActivity.DEFAULT_ZOOM));
+
+        if(!title.equals("My Location")) {
+            MarkerOptions options = new MarkerOptions().position(latLng).title(title);
+            mMap.addMarker(options);
+        }
+
+    }
+
+    private void initMap() {
+        Log.d(TAG, "initMap: initializing map");
         SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager()
                 .findFragmentById(R.id.map);
         assert mapFragment != null;
-        mapFragment.getMapAsync(this);
+        mapView = mapFragment.getView();
+        mapFragment.getMapAsync(MapsActivity.this);
+    }
+
+    private void getLocationPermission() {
+        Log.d(TAG, "getLocationPermission: getting location permissions");
+        String [] permissions = {Manifest.permission.ACCESS_FINE_LOCATION,
+        Manifest.permission.ACCESS_COARSE_LOCATION};
+
+        if(ContextCompat.checkSelfPermission(this.getApplicationContext(),
+            FINE_LOCATION) == PackageManager.PERMISSION_GRANTED) {
+            if(ContextCompat.checkSelfPermission(this.getApplicationContext(),
+                    COARSE_LOCATION) == PackageManager.PERMISSION_GRANTED) {
+                mLocationPermissionsGranted = true;
+                initMap();
+            }
+            else {
+                ActivityCompat.requestPermissions(this, permissions, LOCATION_PERMISSION_REQUEST_CODE);
+            }
+        }
+        else {
+            ActivityCompat.requestPermissions(this, permissions, LOCATION_PERMISSION_REQUEST_CODE);
+        }
     }
 
     @Override
+    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
+        //super.onRequestPermissionsResult(requestCode, permissions, grantResults);
+        Log.d(TAG, "onRequestPermissionsResult: called.");
+        mLocationPermissionsGranted = false;
+
+        if (requestCode == LOCATION_PERMISSION_REQUEST_CODE) {
+            if (grantResults.length > 0) {
+                for (int grantResult : grantResults) {
+                    if (grantResult != PackageManager.PERMISSION_GRANTED) {
+                        mLocationPermissionsGranted = false;
+                        Log.d(TAG, "onRequestPermissionsResult: permission failed");
+                        return;
+                    }
+                }
+                Log.d(TAG, "onRequestPermissionsResult: permission granted");
+                mLocationPermissionsGranted = true;
+                //initialize our map
+                initMap();
+            }
+        }
+    }
+
+
+
+    /*@Override
     public void onMapReady(GoogleMap googleMap) {
         mMap = googleMap;
 
@@ -36,5 +241,5 @@
                 .position(Toronto)
                 .title("Marker in Toronto"));
         mMap.moveCamera(CameraUpdateFactory.newLatLng(Toronto));
-    }
+    }*/
 }
\ No newline at end of file
Index: app/src/main/res/layout/activity_maps.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    tools:context=\".MapsActivity\">\n\n    <fragment\n    android:id=\"@+id/map\"\n    android:name=\"com.google.android.gms.maps.SupportMapFragment\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\" />\n\n    <androidx.appcompat.widget.SearchView\n        android:id=\"@+id/sv_location\"\n        android:hint=\"@string/search\"\n        android:autofillHints=\"\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_margin=\"10dp\"\n        android:background=\"@drawable/bg_round\"/>\n\n\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_maps.xml	(revision c21de9b9ee0e409d6cc551c8d92029896677594f)
+++ app/src/main/res/layout/activity_maps.xml	(date 1606736557144)
@@ -3,6 +3,7 @@
     xmlns:tools="http://schemas.android.com/tools"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
+    android:id="@+id/relLayout2"
     tools:context=".MapsActivity">
 
     <fragment
@@ -11,14 +12,38 @@
     android:layout_width="match_parent"
     android:layout_height="match_parent" />
 
-    <androidx.appcompat.widget.SearchView
-        android:id="@+id/sv_location"
-        android:hint="@string/search"
-        android:autofillHints=""
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_margin="10dp"
-        android:background="@drawable/bg_round"/>
-
+    <RelativeLayout
+        android:layout_width="match_parent"
+        android:layout_height="50dp"
+        android:layout_marginTop="10dp"
+        android:layout_marginRight="10dp"
+        android:layout_marginLeft="10dp"
+        android:background="@drawable/white_border"
+        android:id="@+id/relLayout1">
+
+        <ImageView
+            android:layout_width="15dp"
+            android:layout_height="15dp"
+            android:id="@+id/search"
+            android:layout_centerVertical="true"
+            android:layout_marginLeft="10dp"
+            android:src="@drawable/ic_search"
+            android:contentDescription="@string/todo"
+            android:layout_marginStart="10dp" />
+
+        <AutoCompleteTextView
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:layout_toRightOf="@id/search"
+            android:layout_centerVertical="true"
+            android:textSize="15sp"
+            android:textColor="#000"
+            android:id="@+id/input_search"
+            android:background="@null"
+            android:hint="@string/search"
+            android:layout_toEndOf="@id/search"
+            android:autofillHints=""
+            android:inputType="text" />
+    </RelativeLayout>
 
 </RelativeLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/cps731project/SignUp.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cps731project;\n\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.util.Log;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.ProgressBar;\nimport android.widget.TextView;\nimport android.widget.Toast;\n\nimport com.google.android.gms.tasks.OnCompleteListener;\nimport com.google.android.gms.tasks.OnFailureListener;\nimport com.google.android.gms.tasks.OnSuccessListener;\nimport com.google.android.gms.tasks.Task;\nimport com.google.firebase.firestore.CollectionReference;\nimport com.google.firebase.firestore.DocumentReference;\nimport com.google.firebase.firestore.DocumentSnapshot;\nimport com.google.firebase.firestore.FirebaseFirestore;\nimport com.google.firebase.firestore.Query;\nimport com.google.firebase.firestore.QuerySnapshot;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport androidx.annotation.NonNull;\nimport androidx.appcompat.app.AppCompatActivity;\n\n//import com.google.firebase.auth.FirebaseAuth;\n\npublic class SignUp extends AppCompatActivity {\n    private static final String TAG = \"TAG\";\n    //public static final String EMAIL_KEY = \"email\";\n    //public static final String NAME_KEY = \"name\";\n    //public static final String PASSWORD_KEY = \"password\";\n    private EditText mName, mEmail, mPassword;\n    //private FirebaseAuth fAuth;\n    private FirebaseFirestore db;\n    private ProgressBar progress2;\n    DocumentReference doc;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_sign_up);\n\n        TextView login = findViewById(R.id.haveAccount);\n        Button register = findViewById(R.id.btnRegister);\n        mName = findViewById(R.id.name);\n        mEmail = findViewById(R.id.email);\n        mPassword = findViewById(R.id.password);\n        progress2 = findViewById(R.id.progressBar2);\n\n        db = FirebaseFirestore.getInstance();\n        doc = db.collection(\"users\").document();\n\n        register.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                final String name = mName.getText().toString();\n                final String email = mEmail.getText().toString();\n                final String password = mPassword.getText().toString();\n\n                if (name.isEmpty()) {\n                    mName.setError(\"Full name is required!\");\n                    mName.requestFocus();\n                } else if (email.isEmpty()) {\n                    mEmail.setError(\"Email is required!\");\n                    mEmail.requestFocus();\n                } else if (password.isEmpty()) {\n                    mPassword.setError(\"Password is required!\");\n                    mPassword.requestFocus();\n                } else if (password.length() < 6) {\n                    mPassword.setError(\"Password should be at least 6 characters!\");\n                    mPassword.requestFocus();\n                } else {\n                    CollectionReference usersRef = db.collection(\"users\");\n                    Query query = usersRef.whereEqualTo(\"email\", email);\n                    query.get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\n                        @Override\n                        public void onComplete(@NonNull Task<QuerySnapshot> task) {\n                            progress2.setVisibility(View.VISIBLE);\n                            if (task.isSuccessful()) {\n                                for(DocumentSnapshot documentSnapshot : task.getResult()) {\n                                    String eMail = documentSnapshot.getString(\"email\");\n\n                                    if (eMail.equals(email)) {\n                                        Log.d(TAG, \"User Exists\");\n                                        Toast.makeText(SignUp.this, \"Email exists\", Toast.LENGTH_SHORT).show();\n                                        progress2.setVisibility(View.GONE);\n                                    }\n                                }\n                            }\n                            if(task.getResult().size() == 0 ){\n                                Map<String, Object> reg_entry = new HashMap<>();\n                                reg_entry.put(\"email\", email);\n                                reg_entry.put(\"name\", name);\n                                reg_entry.put(\"password\", password);\n\n                                //   String myId = ref.getId();\n                                //set the document id as the email\n                                db.collection(\"users\").document(email)\n                                        .set(reg_entry)\n                                        .addOnSuccessListener(new OnSuccessListener<Void>() {\n                                            @Override\n                                            public void onSuccess(Void aVoid) {\n                                                progress2.setVisibility(View.VISIBLE);\n                                                Toast.makeText(SignUp.this, \"Successfully added\", Toast.LENGTH_SHORT).show();\n                                                //saving the email as the userid\n                                                UserID test = new UserID();\n                                                test.setUserID(email);\n                                                //startActivity(new Intent(SignUp.this, SignUp.class));\n                                            }\n                                        })\n                                        .addOnFailureListener(new OnFailureListener() {\n                                            @Override\n                                            public void onFailure(@NonNull Exception e) {\n                                                Log.d(\"Error\", e.getMessage());\n                                            }\n                                        });\n                                        /*.addOnSuccessListener(new OnSuccessListener<DocumentReference>() {\n                                            @Override\n                                            public void onSuccess(DocumentReference documentReference) {\n                                                progress2.setVisibility(View.VISIBLE);\n                                                Toast.makeText(SignUp.this, \"Successfully added\", Toast.LENGTH_SHORT).show();\n                                                startActivity(new Intent(SignUp.this, MainActivity.class));\n                                            }\n                                        })*/\n                                progress2.setVisibility(View.GONE);\n                            }\n                        }\n                    });\n                }\n            }\n        });\n        login.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                startActivity(new Intent(SignUp.this, Login.class));\n            }\n        });\n    }\n   /* String user_id;\n    private void setUserID(String email) {\n        user_id = email;\n    }\n    public String getUserId(){\n        return user_id;\n    }*/\n}\n        /*fAuth.createUserWithEmailAndPassword(email, password)\n                .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {\n                    @Override\n                    public void onComplete(@NonNull Task<AuthResult> task) {\n                        if (task.isSuccessful()) {\n                            // Sign in success, update UI with the signed-in user's information\n                            Log.d(TAG, \"createUserWithEmail:success\");\n                            DocumentReference docRef = db.collection(\"users\").document();\n                            // Add document data using a hashmap\n                            Map<String, Object> user = new HashMap<>();\n                            user.put(NAME_KEY, name);\n                            user.put(EMAIL_KEY, email);\n                            user.put(PASSWORD_KEY, password);\n                            //asynchronously write data\n                            docRef.set(user);\n                            Toast.makeText(SignUp.this, \"Account successfully created\", Toast.LENGTH_SHORT).show();\n                            startActivity(new Intent(SignUp.this, MainActivity.class));\n                        }\n                        else {\n                            // If sign in fails, display a message to the user.\n                            Log.w(TAG, \"createUserWithEmail:failure\", task.getException());\n                            Toast.makeText(SignUp.this, \"Authentication failed.\",\n                                    Toast.LENGTH_SHORT).show();\n                        }\n                        progress2.setVisibility(View.GONE);\n                    }\n                });\n        /*progress2.setVisibility(View.VISIBLE);\n        fAuth.createUserWithEmailAndPassword(email, password)\n                .addOnCompleteListener(new OnCompleteListener<AuthResult>() {\n                    @Override\n                    public void onComplete(@NonNull Task<AuthResult> task) {\n                        if (task.isSuccessful()) {\n                            User user = new User(name, email);\n                            Log.d(TAG, \"signInWithEmail:success\");\n                        } else {\n                            // If sign in fails, display a message to the user.\n                            Log.w(TAG, \"signInWithEmail:failure\", task.getException());\n                            Toast.makeText(SignUp.this, \"Authentication failed.\",\n                                    Toast.LENGTH_SHORT).show();\n                        }\n                        if (!task.isSuccessful()) {\n                            Toast.makeText(SignUp.this, \"Authentication failed.\",\n                                    Toast.LENGTH_SHORT).show();\n                        }\n                        progress2.setVisibility(View.GONE);\n                    }\n                });*/\n\n\n    /*public static final String EMAIL_KEY = \"email\";\n    public static final String NAME_KEY = \"name\";\n    public static final String PASSWORD_KEY = \"password\";\n    public static final String TAG = \"TAG\";\n    private EditText name, email, password;\n    private Button register;\n    private FirebaseAuth fAuth;\n    private ProgressBar progress2;\n    FirebaseFirestore db;\n    String userID;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_sign_up);\n\n        name = findViewById(R.id.name);\n        email = findViewById(R.id.email);\n        password = findViewById(R.id.password);\n        register = findViewById(R.id.btnRegister);\n\n        fAuth = FirebaseAuth.getInstance();\n        db = FirebaseFirestore.getInstance();\n        progress2 = findViewById(R.id.progressBar2);\n\n        if (fAuth.getCurrentUser() != null) {\n            startActivity(new Intent(getApplicationContext(), MainActivity.class));\n            finish();\n        }\n\n        register.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                final String regName = name.getText().toString();\n                final String regEmail = email.getText().toString().trim();\n                final String regPassword = password.getText().toString().trim();\n\n\n                if (regEmail.equals(\"\")) {\n                    email.setError(\"Email is required\");\n                }\n                if (regPassword.equals(\"\")) {\n                    email.setError(\"Email is required\");\n                }\n                if (password.length() < 6) {\n                    password.setError(\"Password must be at least 6 Characters\");\n                    return;\n                }\n\n                progress2.setVisibility(View.VISIBLE);\n\n                fAuth.createUserWithEmailAndPassword(regName, regEmail)\n                        .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {\n                            @Override\n                            public void onComplete(@NonNull Task<AuthResult> task) {\n                                if (task.isSuccessful()) {\n                                    Toast.makeText(SignUp.this, \"User Created.\", Toast.LENGTH_SHORT).show();\n                                    userID = fAuth.getCurrentUser().getUid();\n                                    DocumentReference doc = db.collection(\"users\").document(userID);\n                                    Map<String, Object> newUser = new HashMap<>();\n                                    newUser.put(NAME_KEY, regName);\n                                    newUser.put(EMAIL_KEY, regEmail);\n                                    newUser.put(PASSWORD_KEY, regPassword);\n                                    doc.set(newUser).addOnSuccessListener(new OnSuccessListener<Void>() {\n                                        @Override\n                                        public void onSuccess(Void aVoid) {\n                                            Log.d(TAG, \"onSuccess: user Profile is created for \" + userID);\n                                        }\n                                    });\n                                    startActivity(new Intent(getApplicationContext(), MainActivity.class));\n                                } else {\n                                    Toast.makeText(SignUp.this, \"Error!\" + task.getException().getMessage(), Toast.LENGTH_SHORT).show();\n                                    progress2.setVisibility(View.GONE);\n                                }\n\n                            }\n\n                        });\n            }\n        });\n    }\n    public static final String EMAIL_KEY = \"email\";\n    public static final String NAME_KEY = \"name\";\n    public static final String PASSWORD_KEY = \"password\";\n\n    private Button register;\n    private EditText name;\n    private EditText email;\n    private EditText password;\n    private ProgressBar progress2;\n\n    FirebaseFirestore db = FirebaseFirestore.getInstance();\n    DocumentReference ref;// = db.collection(\"users\").document();\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_sign_up);\n\n        ref = db.collection(\"users\").document(\"email\");\n\n        progress2 = findViewById(R.id.progressBar2);\n        register = findViewById(R.id.btnRegister);\n        register.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                name = findViewById(R.id.name);\n                email = findViewById(R.id.email);\n                password = findViewById(R.id.password);\n\n                final String reg_name = name.getText().toString();\n                final String reg_email = email.getText().toString();\n                final String reg_password = password.getText().toString();\n\n                if(reg_name.isEmpty() || reg_email.isEmpty() || reg_password.isEmpty()) {\n                    Toast.makeText(SignUp.this, \"Text fields cannot be empty\", Toast.LENGTH_SHORT).show();\n                }\n                else if(reg_name.equals(\"\")){\n                    Toast.makeText(SignUp.this, \"Please enter your name\", Toast.LENGTH_SHORT).show();\n                }\n                else if(reg_email.equals(\"\")){\n                    Toast.makeText(SignUp.this, \"Please enter an email address\", Toast.LENGTH_SHORT).show();\n                }\n                else if(reg_password.equals(\"\")){\n                    Toast.makeText(SignUp.this, \"Please enter a password\", Toast.LENGTH_SHORT).show();\n                }\n                else {\n\n                    //This part is supposed to check if account already exists but it's not working not sure why\n                    ref.get().addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\n                        @Override\n\n                        public void onSuccess(DocumentSnapshot documentSnapshot) {\n                            progress2.setVisibility(View.VISIBLE);\n                            if (documentSnapshot.exists()){\n                                Toast.makeText(SignUp.this, \"Sorry,this user already exists\", Toast.LENGTH_SHORT).show();\n                                progress2.setVisibility(View.INVISIBLE);\n                            }else{\n                                Map<String, Object> newuser = new HashMap<>();\n                                newuser.put(NAME_KEY, reg_name);\n                                newuser.put(EMAIL_KEY, reg_email);\n                                newuser.put(PASSWORD_KEY, reg_password);\n\n                                db.collection(\"users\")\n                                        .add(newuser)\n                                        .addOnSuccessListener(new OnSuccessListener<DocumentReference>() {\n                                            @Override\n                                            public void onSuccess(DocumentReference documentReference) {\n                                                Toast.makeText(SignUp.this, \"Account successfully created\", Toast.LENGTH_SHORT).show();\n                                                startActivity(new Intent(SignUp.this, MainActivity.class));\n                                            }\n                                        })\n                                        .addOnFailureListener(new OnFailureListener() {\n                                            @Override\n                                            public void onFailure(@NonNull Exception e) {\n                                                Toast.makeText(SignUp.this, \"Error creating account\", Toast.LENGTH_LONG).show();\n                                                Log.d(\"Error\", e.getMessage());\n                                            }\n                                        });\n                            }\n                        }\n                    });\n\n                }\n            }\n        });\n        TextView hasAccount = findViewById(R.id.haveAccount);\n        hasAccount.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                startActivity(new Intent(SignUp.this, Login.class));\n            }\n        });*/
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/cps731project/SignUp.java	(revision c21de9b9ee0e409d6cc551c8d92029896677594f)
+++ app/src/main/java/com/example/cps731project/SignUp.java	(date 1606716265259)
@@ -27,8 +27,6 @@
 import androidx.annotation.NonNull;
 import androidx.appcompat.app.AppCompatActivity;
 
-//import com.google.firebase.auth.FirebaseAuth;
-
 public class SignUp extends AppCompatActivity {
     private static final String TAG = "TAG";
     //public static final String EMAIL_KEY = "email";
Index: app/src/main/java/com/example/cps731project/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cps731project;\n\nimport android.annotation.SuppressLint;\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.util.Log;\nimport android.view.MenuItem;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.Spinner;\n\nimport com.google.android.gms.tasks.OnFailureListener;\nimport com.google.android.gms.tasks.OnSuccessListener;\nimport com.google.android.material.bottomnavigation.BottomNavigationView;\nimport com.google.firebase.firestore.DocumentReference;\nimport com.google.firebase.firestore.FirebaseFirestore;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport androidx.annotation.NonNull;\nimport androidx.appcompat.app.AppCompatActivity;\n\npublic class MainActivity extends AppCompatActivity {\n\n    FirebaseFirestore db = FirebaseFirestore.getInstance();\n    private static final String TAG = \"MainActivity\";\n    private static final String KEY_TITLE = \"mealType\";\n    private Spinner mealType;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        BottomNavigationView bottomNavigationView = findViewById(R.id.bottomNav);\n        bottomNavigationView.setSelectedItemId(R.id.mainActivity);\n        bottomNavigationView.setOnNavigationItemSelectedListener(new BottomNavigationView.OnNavigationItemSelectedListener() {\n            @SuppressLint(\"NonConstantResourceId\")\n            @Override\n            public boolean onNavigationItemSelected(@NonNull MenuItem item) {\n                switch (item.getItemId()) {\n                    case R.id.mainActivity:\n                        return true;\n                    case R.id.grocery:\n                        startActivity(new Intent(getApplicationContext(), MapsActivity.class));\n                        overridePendingTransition(0, 0);\n                        return true;\n                    case R.id.viewFavourites:\n                        startActivity(new Intent(getApplicationContext(), ViewFavourites.class));\n                        overridePendingTransition(0, 0);\n                        return true;\n                    case R.id.viewHistory:\n                        startActivity(new Intent(getApplicationContext(), ViewHistory.class));\n                        overridePendingTransition(0, 0);\n                        return true;\n                    case R.id.viewAccount:\n                        startActivity(new Intent(getApplicationContext(), ViewAccount.class));\n                        overridePendingTransition(0, 0);\n                        return true;\n                }\n                return false;\n            }\n        });\n\n        mealType = findViewById(R.id.mealType);\n\n        final String id = UserID.user_id;\n\n        Button goBtn = findViewById(R.id.btnGo);\n        goBtn.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                String chosenMeal = mealType.getSelectedItem().toString();\n\n                Map<String, Object> meal = new HashMap<>();\n                meal.put(KEY_TITLE, chosenMeal);\n                db.collection(\"users\").document(id).collection(\"ingredients\")\n                        .add(meal)\n                        .addOnSuccessListener(new OnSuccessListener<DocumentReference>() {\n                            @Override\n                            public void onSuccess(DocumentReference documentReference) {\n                                //Toast.makeText(MainActivity.this, \"Ingredient Added\", Toast.LENGTH_LONG).show();\n                                startActivity(new Intent(MainActivity.this, IngredientList.class));\n                                Log.d(TAG, \"DocumentSnapshot added with ID: \" + documentReference.getId());\n                            }\n                        })\n                        .addOnFailureListener(new OnFailureListener() {\n                            @Override\n                            public void onFailure(@NonNull Exception e) {\n                                Log.w(TAG, \"Error adding meal type\", e);\n                            }\n                        });\n            }\n        });\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/cps731project/MainActivity.java	(revision c21de9b9ee0e409d6cc551c8d92029896677594f)
+++ app/src/main/java/com/example/cps731project/MainActivity.java	(date 1606701613691)
@@ -43,7 +43,7 @@
                     case R.id.mainActivity:
                         return true;
                     case R.id.grocery:
-                        startActivity(new Intent(getApplicationContext(), MapsActivity.class));
+                        startActivity(new Intent(getApplicationContext(), TestActivity.class));
                         overridePendingTransition(0, 0);
                         return true;
                     case R.id.viewFavourites:
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    package=\"com.example.cps731project\">\n\n    <uses-permission android:name=\"android.permission.INTERNET\" />\n\n    <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\n\n    <application\n        android:allowBackup=\"true\"\n        android:icon=\"@mipmap/ic_launcher\"\n        android:label=\"@string/app_name\"\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\n        android:supportsRtl=\"true\"\n        android:theme=\"@style/AppTheme\">\n        <!--\n             The API key for Google Maps-based APIs is defined as a string resource.\n             (See the file \"res/values/google_maps_api.xml\").\n             Note that the API key is linked to the encryption key used to sign the APK.\n             You need a different API key for each encryption key, including the release key that is used to\n             sign the APK for publishing.\n             You can define the keys for the debug and release targets in src/debug/ and src/release/.\n        -->\n        <activity\n            android:name=\".MapsActivity\"\n            android:label=\"@string/title_activity_maps\" />\n        <activity android:name=\".ViewHistory\" />\n        <activity android:name=\".ViewFavourites\" />\n        <activity android:name=\".ShowRecipe\" />\n        <activity android:name=\".ViewAccount\" />\n        <activity android:name=\".IngredientList\" />\n        <activity android:name=\".Login\" />\n        <activity android:name=\".MainActivity\" />\n        <activity android:name=\".SignUp\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.MAIN\" />\n\n                <category android:name=\"android.intent.category.LAUNCHER\" />\n            </intent-filter>\n        </activity>\n\n        <meta-data\n            android:name=\"com.google.android.geo.API_KEY\"\n            android:value=\"@string/google_maps_key\" />\n    </application>\n\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision c21de9b9ee0e409d6cc551c8d92029896677594f)
+++ app/src/main/AndroidManifest.xml	(date 1606734837557)
@@ -3,8 +3,9 @@
     package="com.example.cps731project">
 
     <uses-permission android:name="android.permission.INTERNET" />
-
     <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
+    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
+    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
 
     <application
         android:allowBackup="true"
@@ -13,6 +14,7 @@
         android:roundIcon="@mipmap/ic_launcher_round"
         android:supportsRtl="true"
         android:theme="@style/AppTheme">
+        <activity android:name=".TestActivity" />
         <!--
              The API key for Google Maps-based APIs is defined as a string resource.
              (See the file "res/values/google_maps_api.xml").
@@ -23,6 +25,7 @@
         -->
         <activity
             android:name=".MapsActivity"
+            android:hardwareAccelerated="false"
             android:label="@string/title_activity_maps" />
         <activity android:name=".ViewHistory" />
         <activity android:name=".ViewFavourites" />
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\n    <string name=\"app_name\">CPS731Project</string>\n    <string name=\"ezFood\">EZ Food</string>\n    <string name=\"createAccount\">Create An Account</string>\n    <string name=\"email\">Email</string>\n    <string name=\"password\">Password</string>\n    <string name=\"loginHere\">Please Login</string>\n    <string name=\"login\">LOGIN</string>\n    <string name=\"dontHaveAccount\">Don\\'t have an account? Create one here</string>\n    <string name=\"addIngredient\">Add Ingredient</string>\n    <string name=\"btnAdd\">ADD</string>\n    <string name=\"whatToEat\">What do you want to eat?</string>\n    <string name=\"ingredientsYouHave\">Ingredients You Have</string>\n    <string name=\"btnGo\">GO</string>\n    <string name=\"btnLogout\">LOGOUT</string>\n    <string name=\"btnDeleteAcc\">DELETE ACCOUNT</string>\n    <string name=\"myAccount\">My Account</string>\n    <string name=\"account\">Account</string>\n    <string name=\"txtName\">Name</string>\n    <string name=\"txtEmail\">Email</string>\n    <string name=\"txtRatings\">Ratings</string>\n    <string name=\"favourites\">Favourites</string>\n    <string name=\"none\">No favourites yet</string>\n    <string name=\"deleteAll\">DELETE ALL FAVOURITES</string>\n    <string name=\"history\">History</string>\n    <string name=\"none2\">No history yet</string>\n    <string name=\"deleteAll2\">DELETE ALL HISTORY</string>\n    <string name=\"home\">Home</string>\n    <string name=\"search\">Search</string>\n    <string name=\"grocery\">Grocery</string>\n    <string name=\"title_activity_show_recipe\">ShowRecipe</string>\n    <string name=\"next\">Next</string>\n    <string name=\"previous\">Previous</string>\n    <string name=\"title_activity_maps\">Map</string>\n    <string-array name=\"meals\">\n        <item>Snack</item>\n        <item>Breakfast</item>\n        <item>Lunch</item>\n        <item>Dinner</item>\n    </string-array>\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/strings.xml	(revision c21de9b9ee0e409d6cc551c8d92029896677594f)
+++ app/src/main/res/values/strings.xml	(date 1606747023090)
@@ -32,6 +32,9 @@
     <string name="next">Next</string>
     <string name="previous">Previous</string>
     <string name="title_activity_maps">Map</string>
+    <string name="todo">TODO</string>
+    <string name="gps">GPS</string>
+    <string name="click">Search grocery stores near me</string>
     <string-array name="meals">
         <item>Snack</item>
         <item>Breakfast</item>
Index: .idea/shelf/Uncommitted_changes_before_Update_at_2020-11-22_9_27_PM_[Default_Changelist]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_2020-11-22_9_27_PM_[Default_Changelist]/shelved.patch	(revision c21de9b9ee0e409d6cc551c8d92029896677594f)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_2020-11-22_9_27_PM_[Default_Changelist]/shelved.patch	(revision c21de9b9ee0e409d6cc551c8d92029896677594f)
@@ -1,1702 +0,0 @@
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_2020-11-15_3_57_AM_[Default_Changelist]/shelved.patch
-===================================================================
---- .idea/shelf/Uncommitted_changes_before_Update_at_2020-11-15_3_57_AM_[Default_Changelist]/shelved.patch	(revision 4aae76b2288305c355e0355ddc4a45783c62a78e)
-+++ .idea/shelf/Uncommitted_changes_before_Update_at_2020-11-15_3_57_AM_[Default_Changelist]/shelved.patch	(revision 4aae76b2288305c355e0355ddc4a45783c62a78e)
-@@ -1,302 +0,0 @@
--Index: app/src/main/java/com/example/cps731project/SignUp.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.example.cps731project;\n\nimport androidx.appcompat.app.AppCompatActivity;\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.ProgressBar;\nimport android.widget.TextView;\nimport com.google.firebase.auth.FirebaseAuth;\n\npublic class SignUp extends AppCompatActivity implements View.OnClickListener {\n    private EditText mName, mEmail, mPassword;\n    private Button register;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_sign_up);\n\n        FirebaseAuth fAuth = FirebaseAuth.getInstance();\n\n        TextView login = findViewById(R.id.haveAccount);\n        login.setOnClickListener(this);\n\n        register = findViewById(R.id.btnRegister);\n        register.setOnClickListener(this);\n\n        mName = findViewById(R.id.name);\n        mEmail = findViewById(R.id.email);\n        mPassword = findViewById(R.id.password);\n        ProgressBar progress2 = findViewById(R.id.progressBar2);\n    }\n\n    @Override\n    public void onClick(View v) {\n        if (v.getId() == R.id.haveAccount) {\n            startActivity(new Intent(this, Login.class));\n        } else if (v.getId() == R.id.btnRegister) {\n            registerUser();\n        }\n    }\n\n    private void registerUser() {\n        String name = mName.getText().toString().trim();\n        String email = mEmail.getText().toString().trim();\n        String password = mPassword.getText().toString().trim();\n\n        if(name.isEmpty()) {\n            mName.setError(\"Full name is required!\");\n            mName.requestFocus();\n            return;\n        }\n        if(email.isEmpty()) {\n            mEmail.setError(\"Email is required!\");\n            mEmail.requestFocus();\n            return;\n        }\n        if(password.isEmpty()) {\n            mPassword.setError(\"Password is required!\");\n            mPassword.requestFocus();\n            return;\n        }\n        if(password.length() < 6) {\n            mPassword.setError(\"Password should be at least 6 characters!\");\n        }\n\n    }\n}\n    /*public static final String EMAIL_KEY = \"email\";\n    public static final String NAME_KEY = \"name\";\n    public static final String PASSWORD_KEY = \"password\";\n    public static final String TAG = \"TAG\";\n    private EditText name, email, password;\n    private Button register;\n    private FirebaseAuth fAuth;\n    private ProgressBar progress2;\n    FirebaseFirestore db;\n    String userID;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_sign_up);\n\n        name = findViewById(R.id.name);\n        email = findViewById(R.id.email);\n        password = findViewById(R.id.password);\n        register = findViewById(R.id.btnRegister);\n\n        fAuth = FirebaseAuth.getInstance();\n        db = FirebaseFirestore.getInstance();\n        progress2 = findViewById(R.id.progressBar2);\n\n        if (fAuth.getCurrentUser() != null) {\n            startActivity(new Intent(getApplicationContext(), MainActivity.class));\n            finish();\n        }\n\n        register.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                final String regName = name.getText().toString();\n                final String regEmail = email.getText().toString().trim();\n                final String regPassword = password.getText().toString().trim();\n\n\n                if (regEmail.equals(\"\")) {\n                    email.setError(\"Email is required\");\n                }\n                if (regPassword.equals(\"\")) {\n                    email.setError(\"Email is required\");\n                }\n                if (password.length() < 6) {\n                    password.setError(\"Password must be at least 6 Characters\");\n                    return;\n                }\n\n                progress2.setVisibility(View.VISIBLE);\n\n                fAuth.createUserWithEmailAndPassword(regName, regEmail)\n                        .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {\n                            @Override\n                            public void onComplete(@NonNull Task<AuthResult> task) {\n                                if (task.isSuccessful()) {\n                                    Toast.makeText(SignUp.this, \"User Created.\", Toast.LENGTH_SHORT).show();\n                                    userID = fAuth.getCurrentUser().getUid();\n                                    DocumentReference doc = db.collection(\"users\").document(userID);\n                                    Map<String, Object> newUser = new HashMap<>();\n                                    newUser.put(NAME_KEY, regName);\n                                    newUser.put(EMAIL_KEY, regEmail);\n                                    newUser.put(PASSWORD_KEY, regPassword);\n                                    doc.set(newUser).addOnSuccessListener(new OnSuccessListener<Void>() {\n                                        @Override\n                                        public void onSuccess(Void aVoid) {\n                                            Log.d(TAG, \"onSuccess: user Profile is created for \" + userID);\n                                        }\n                                    });\n                                    startActivity(new Intent(getApplicationContext(), MainActivity.class));\n                                } else {\n                                    Toast.makeText(SignUp.this, \"Error!\" + task.getException().getMessage(), Toast.LENGTH_SHORT).show();\n                                    progress2.setVisibility(View.GONE);\n                                }\n\n                            }\n\n                        });\n            }\n        });\n    }\n    public static final String EMAIL_KEY = \"email\";\n    public static final String NAME_KEY = \"name\";\n    public static final String PASSWORD_KEY = \"password\";\n\n    private Button register;\n    private EditText name;\n    private EditText email;\n    private EditText password;\n    private ProgressBar progress2;\n\n    FirebaseFirestore db = FirebaseFirestore.getInstance();\n    DocumentReference ref;// = db.collection(\"users\").document();\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_sign_up);\n\n        ref = db.collection(\"users\").document(\"email\");\n\n        progress2 = findViewById(R.id.progressBar2);\n        register = findViewById(R.id.btnRegister);\n        register.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                name = findViewById(R.id.name);\n                email = findViewById(R.id.email);\n                password = findViewById(R.id.password);\n\n                final String reg_name = name.getText().toString();\n                final String reg_email = email.getText().toString();\n                final String reg_password = password.getText().toString();\n\n                if(reg_name.isEmpty() || reg_email.isEmpty() || reg_password.isEmpty()) {\n                    Toast.makeText(SignUp.this, \"Text fields cannot be empty\", Toast.LENGTH_SHORT).show();\n                }\n                else if(reg_name.equals(\"\")){\n                    Toast.makeText(SignUp.this, \"Please enter your name\", Toast.LENGTH_SHORT).show();\n                }\n                else if(reg_email.equals(\"\")){\n                    Toast.makeText(SignUp.this, \"Please enter an email address\", Toast.LENGTH_SHORT).show();\n                }\n                else if(reg_password.equals(\"\")){\n                    Toast.makeText(SignUp.this, \"Please enter a password\", Toast.LENGTH_SHORT).show();\n                }\n                else {\n\n                    //This part is supposed to check if account already exists but it's not working not sure why\n                    ref.get().addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\n                        @Override\n\n                        public void onSuccess(DocumentSnapshot documentSnapshot) {\n                            progress2.setVisibility(View.VISIBLE);\n                            if (documentSnapshot.exists()){\n                                Toast.makeText(SignUp.this, \"Sorry,this user already exists\", Toast.LENGTH_SHORT).show();\n                                progress2.setVisibility(View.INVISIBLE);\n                            }else{\n                                Map<String, Object> newuser = new HashMap<>();\n                                newuser.put(NAME_KEY, reg_name);\n                                newuser.put(EMAIL_KEY, reg_email);\n                                newuser.put(PASSWORD_KEY, reg_password);\n\n                                db.collection(\"users\")\n                                        .add(newuser)\n                                        .addOnSuccessListener(new OnSuccessListener<DocumentReference>() {\n                                            @Override\n                                            public void onSuccess(DocumentReference documentReference) {\n                                                Toast.makeText(SignUp.this, \"Account successfully created\", Toast.LENGTH_SHORT).show();\n                                                startActivity(new Intent(SignUp.this, MainActivity.class));\n                                            }\n                                        })\n                                        .addOnFailureListener(new OnFailureListener() {\n                                            @Override\n                                            public void onFailure(@NonNull Exception e) {\n                                                Toast.makeText(SignUp.this, \"Error creating account\", Toast.LENGTH_LONG).show();\n                                                Log.d(\"Error\", e.getMessage());\n                                            }\n                                        });\n                            }\n                        }\n                    });\n\n                }\n            }\n        });\n        TextView hasAccount = findViewById(R.id.haveAccount);\n        hasAccount.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                startActivity(new Intent(SignUp.this, Login.class));\n            }\n        });*/
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/java/com/example/cps731project/SignUp.java	(revision 9530ff3be2eeefef49243de38dd8a13106c483d1)
--+++ app/src/main/java/com/example/cps731project/SignUp.java	(date 1605430358218)
--@@ -1,73 +1,184 @@
-- package com.example.cps731project;
-- 
--+import androidx.annotation.NonNull;
-- import androidx.appcompat.app.AppCompatActivity;
--+
-- import android.content.Intent;
-- import android.os.Bundle;
--+import android.util.Log;
-- import android.view.View;
-- import android.widget.Button;
-- import android.widget.EditText;
-- import android.widget.ProgressBar;
-- import android.widget.TextView;
---import com.google.firebase.auth.FirebaseAuth;
--+import android.widget.Toast;
--+
--+import com.google.android.gms.tasks.OnCompleteListener;
--+import com.google.android.gms.tasks.OnFailureListener;
--+import com.google.android.gms.tasks.OnSuccessListener;
--+//import com.google.firebase.auth.FirebaseAuth;
--+import com.google.android.gms.tasks.Task;
--+import com.google.firebase.firestore.CollectionReference;
--+import com.google.firebase.firestore.DocumentReference;
--+import com.google.firebase.firestore.DocumentSnapshot;
--+import com.google.firebase.firestore.FirebaseFirestore;
--+import com.google.firebase.firestore.Query;
--+import com.google.firebase.firestore.QuerySnapshot;
-- 
---public class SignUp extends AppCompatActivity implements View.OnClickListener {
--+import java.util.HashMap;
--+import java.util.Map;
--+
--+public class SignUp extends AppCompatActivity {
--+    private static final String TAG = "TAG";
--+    //public static final String EMAIL_KEY = "email";
--+    //public static final String NAME_KEY = "name";
--+    //public static final String PASSWORD_KEY = "password";
--     private EditText mName, mEmail, mPassword;
---    private Button register;
--+    //private FirebaseAuth fAuth;
--+    private FirebaseFirestore db;
--+    private ProgressBar progress2;
--+    DocumentReference doc;
-- 
--     @Override
--     protected void onCreate(Bundle savedInstanceState) {
--         super.onCreate(savedInstanceState);
--         setContentView(R.layout.activity_sign_up);
-- 
---        FirebaseAuth fAuth = FirebaseAuth.getInstance();
---
--         TextView login = findViewById(R.id.haveAccount);
---        login.setOnClickListener(this);
---
---        register = findViewById(R.id.btnRegister);
---        register.setOnClickListener(this);
---
--+        Button register = findViewById(R.id.btnRegister);
--         mName = findViewById(R.id.name);
--         mEmail = findViewById(R.id.email);
--         mPassword = findViewById(R.id.password);
---        ProgressBar progress2 = findViewById(R.id.progressBar2);
---    }
--+        progress2 = findViewById(R.id.progressBar2);
-- 
---    @Override
---    public void onClick(View v) {
---        if (v.getId() == R.id.haveAccount) {
---            startActivity(new Intent(this, Login.class));
---        } else if (v.getId() == R.id.btnRegister) {
---            registerUser();
---        }
---    }
---
---    private void registerUser() {
---        String name = mName.getText().toString().trim();
---        String email = mEmail.getText().toString().trim();
---        String password = mPassword.getText().toString().trim();
--+        db = FirebaseFirestore.getInstance();
--+        doc = db.collection("users").document();
--+
--+        register.setOnClickListener(new View.OnClickListener() {
--+            @Override
--+            public void onClick(View v) {
--+                final String name = mName.getText().toString();
--+                final String email = mEmail.getText().toString();
--+                final String password = mPassword.getText().toString();
-- 
---        if(name.isEmpty()) {
---            mName.setError("Full name is required!");
---            mName.requestFocus();
---            return;
---        }
---        if(email.isEmpty()) {
---            mEmail.setError("Email is required!");
---            mEmail.requestFocus();
---            return;
---        }
---        if(password.isEmpty()) {
---            mPassword.setError("Password is required!");
---            mPassword.requestFocus();
---            return;
---        }
---        if(password.length() < 6) {
---            mPassword.setError("Password should be at least 6 characters!");
---        }
--+                if (name.isEmpty()) {
--+                    mName.setError("Full name is required!");
--+                    mName.requestFocus();
--+                } else if (email.isEmpty()) {
--+                    mEmail.setError("Email is required!");
--+                    mEmail.requestFocus();
--+                } else if (password.isEmpty()) {
--+                    mPassword.setError("Password is required!");
--+                    mPassword.requestFocus();
--+                } else if (password.length() < 6) {
--+                    mPassword.setError("Password should be at least 6 characters!");
--+                    mPassword.requestFocus();
--+                } else {
--+                    CollectionReference usersRef = db.collection("users");
--+                    Query query = usersRef.whereEqualTo("email", email);
--+                    query.get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {
--+                        @Override
--+                        public void onComplete(@NonNull Task<QuerySnapshot> task) {
--+                            progress2.setVisibility(View.VISIBLE);
--+                            if (task.isSuccessful()) {
--+                                for(DocumentSnapshot documentSnapshot : task.getResult()) {
--+                                    String eMail = documentSnapshot.getString("email");
--+
--+                                    if (eMail.equals(email)) {
--+                                        Log.d(TAG, "User Exists");
--+                                        Toast.makeText(SignUp.this, "Email exists", Toast.LENGTH_SHORT).show();
--+                                        progress2.setVisibility(View.GONE);
--+                                    }
--+                                }
--+                            }
--+                            if(task.getResult().size() == 0 ){
--+                                Map<String, Object> reg_entry = new HashMap<>();
--+                                reg_entry.put("email", email);
--+                                reg_entry.put("name", name);
--+                                reg_entry.put("password", password);
-- 
--+                                //   String myId = ref.getId();
--+                                db.collection("users")
--+                                        .add(reg_entry)
--+                                        .addOnSuccessListener(new OnSuccessListener<DocumentReference>() {
--+                                            @Override
--+                                            public void onSuccess(DocumentReference documentReference) {
--+                                                progress2.setVisibility(View.VISIBLE);
--+                                                Toast.makeText(SignUp.this, "Successfully added", Toast.LENGTH_SHORT).show();
--+                                                startActivity(new Intent(SignUp.this, Login.class));
--+                                            }
--+                                        })
--+                                        .addOnFailureListener(new OnFailureListener() {
--+                                            @Override
--+                                            public void onFailure(@NonNull Exception e) {
--+                                                Log.d("Error", e.getMessage());
--+                                            }
--+                                        });
--+                                progress2.setVisibility(View.GONE);
--+                            }
--+                        }
--+                    });
--+                }
--+            }
--+        });
--+        login.setOnClickListener(new View.OnClickListener() {
--+            @Override
--+            public void onClick(View v) {
--+                startActivity(new Intent(SignUp.this, Login.class));
--+            }
--+        });
--     }
-- }
--+        /*fAuth.createUserWithEmailAndPassword(email, password)
--+                .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {
--+                    @Override
--+                    public void onComplete(@NonNull Task<AuthResult> task) {
--+                        if (task.isSuccessful()) {
--+                            // Sign in success, update UI with the signed-in user's information
--+                            Log.d(TAG, "createUserWithEmail:success");
--+                            DocumentReference docRef = db.collection("users").document();
--+                            // Add document data using a hashmap
--+                            Map<String, Object> user = new HashMap<>();
--+                            user.put(NAME_KEY, name);
--+                            user.put(EMAIL_KEY, email);
--+                            user.put(PASSWORD_KEY, password);
--+                            //asynchronously write data
--+                            docRef.set(user);
--+                            Toast.makeText(SignUp.this, "Account successfully created", Toast.LENGTH_SHORT).show();
--+                            startActivity(new Intent(SignUp.this, MainActivity.class));
--+                        }
--+                        else {
--+                            // If sign in fails, display a message to the user.
--+                            Log.w(TAG, "createUserWithEmail:failure", task.getException());
--+                            Toast.makeText(SignUp.this, "Authentication failed.",
--+                                    Toast.LENGTH_SHORT).show();
--+                        }
--+                        progress2.setVisibility(View.GONE);
--+                    }
--+                });
--+        /*progress2.setVisibility(View.VISIBLE);
--+        fAuth.createUserWithEmailAndPassword(email, password)
--+                .addOnCompleteListener(new OnCompleteListener<AuthResult>() {
--+                    @Override
--+                    public void onComplete(@NonNull Task<AuthResult> task) {
--+                        if (task.isSuccessful()) {
--+                            User user = new User(name, email);
--+                            Log.d(TAG, "signInWithEmail:success");
--+                        } else {
--+                            // If sign in fails, display a message to the user.
--+                            Log.w(TAG, "signInWithEmail:failure", task.getException());
--+                            Toast.makeText(SignUp.this, "Authentication failed.",
--+                                    Toast.LENGTH_SHORT).show();
--+                        }
--+                        if (!task.isSuccessful()) {
--+                            Toast.makeText(SignUp.this, "Authentication failed.",
--+                                    Toast.LENGTH_SHORT).show();
--+                        }
--+                        progress2.setVisibility(View.GONE);
--+                    }
--+                });*/
--+
--+
--     /*public static final String EMAIL_KEY = "email";
--     public static final String NAME_KEY = "name";
--     public static final String PASSWORD_KEY = "password";
--Index: app/src/main/java/com/example/cps731project/Login.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.example.cps731project;\n\nimport android.os.Bundle;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.Toast;\n\nimport com.google.firebase.auth.FirebaseAuth;\n\nimport androidx.appcompat.app.AppCompatActivity;\n\n//import android.widget.ProgressBar;\n\n\npublic class Login extends AppCompatActivity {\n\n    private EditText logEmail;\n    private EditText logPassword;\n\n    private final FirebaseAuth db = FirebaseAuth.getInstance();\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_login);\n\n        logEmail = findViewById(R.id.loginEmail);\n        logPassword = findViewById(R.id.loginPassword);\n        Button login = findViewById(R.id.btnLogin);\n        //ProgressBar progress = findViewById(R.id.progressBar);\n\n        login.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                final String userEmail = logEmail.getText().toString().trim();\n                final String userPassword = logPassword.getText().toString();\n\n                if (userEmail.isEmpty() || userPassword.isEmpty()) {\n                    Toast.makeText(Login.this, \"Text fields cannot be empty\", Toast.LENGTH_SHORT).show();\n                }\n            }\n        });\n    }\n}
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/java/com/example/cps731project/Login.java	(revision 9530ff3be2eeefef49243de38dd8a13106c483d1)
--+++ app/src/main/java/com/example/cps731project/Login.java	(date 1605430063270)
--@@ -1,9 +1,11 @@
-- package com.example.cps731project;
-- 
--+import android.content.Intent;
-- import android.os.Bundle;
-- import android.view.View;
-- import android.widget.Button;
-- import android.widget.EditText;
--+import android.widget.TextView;
-- import android.widget.Toast;
-- 
-- import com.google.firebase.auth.FirebaseAuth;
--@@ -24,7 +26,7 @@
--     protected void onCreate(Bundle savedInstanceState) {
--         super.onCreate(savedInstanceState);
--         setContentView(R.layout.activity_login);
---
--+        TextView createAccount = findViewById(R.id.dontHaveAccount);
--         logEmail = findViewById(R.id.loginEmail);
--         logPassword = findViewById(R.id.loginPassword);
--         Button login = findViewById(R.id.btnLogin);
--@@ -41,5 +43,11 @@
--                 }
--             }
--         });
--+        createAccount.setOnClickListener(new View.OnClickListener() {
--+            @Override
--+            public void onClick(View v) {
--+                startActivity(new Intent(Login.this, SignUp.class));
--+            }
--+        });
--     }
-- }
--\ No newline at end of file
--Index: app/src/main/java/com/example/cps731project/User.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/java/com/example/cps731project/User.java	(date 1605410790775)
--+++ app/src/main/java/com/example/cps731project/User.java	(date 1605410790775)
--@@ -0,0 +1,14 @@
--+package com.example.cps731project;
--+
--+public class User {
--+    public String fullName, email;
--+
--+    public User() {
--+
--+    }
--+
--+    public User(String fullName, String email) {
--+        this.fullName = fullName;
--+        this.email = email;
--+    }
--+}
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_2020-11-15_3_57_AM__Default_Changelist_.xml
-===================================================================
---- .idea/shelf/Uncommitted_changes_before_Update_at_2020-11-15_3_57_AM__Default_Changelist_.xml	(revision 4aae76b2288305c355e0355ddc4a45783c62a78e)
-+++ .idea/shelf/Uncommitted_changes_before_Update_at_2020-11-15_3_57_AM__Default_Changelist_.xml	(revision 4aae76b2288305c355e0355ddc4a45783c62a78e)
-@@ -1,4 +0,0 @@
--<changelist name="Uncommitted_changes_before_Update_at_2020-11-15_3_57_AM_[Default_Changelist]" date="1605430670799" recycled="true" deleted="true">
--  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2020-11-15_3_57_AM_[Default_Changelist]/shelved.patch" />
--  <option name="DESCRIPTION" value="Uncommitted changes before Update at 2020-11-15 3:57 AM [Default Changelist]" />
--</changelist>
-\ No newline at end of file
-Index: app/src/main/res/layout/activity_view_history.xml
-===================================================================
---- app/src/main/res/layout/activity_view_history.xml	(revision 4aae76b2288305c355e0355ddc4a45783c62a78e)
-+++ app/src/main/res/layout/activity_view_history.xml	(revision 4aae76b2288305c355e0355ddc4a45783c62a78e)
-@@ -1,68 +0,0 @@
--<?xml version="1.0" encoding="utf-8"?>
--<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
--    xmlns:app="http://schemas.android.com/apk/res-auto"
--    xmlns:tools="http://schemas.android.com/tools"
--    android:layout_width="match_parent"
--    android:layout_height="match_parent"
--    tools:context=".ViewHistory">
--
--    <TextView
--        android:id="@+id/textView4"
--        android:layout_width="392dp"
--        android:layout_height="47dp"
--        android:layout_marginBottom="529dp"
--        android:layout_marginTop="32dp"
--        android:text="@string/history"
--        android:textSize="30sp"
--        app:layout_constraintBottom_toBottomOf="parent"
--        app:layout_constraintEnd_toEndOf="parent"
--        app:layout_constraintStart_toStartOf="parent"
--        app:layout_constraintTop_toTopOf="parent" />
--
--    <TextView
--        android:id="@+id/textView"
--        android:layout_width="386dp"
--        android:layout_height="52dp"
--        android:layout_marginBottom="474dp"
--        android:layout_marginEnd="16dp"
--        android:layout_marginLeft="9dp"
--        android:layout_marginRight="16dp"
--        android:layout_marginStart="9dp"
--        android:layout_marginTop="1dp"
--        android:text="@string/none2"
--        android:textSize="20sp"
--        app:layout_constraintBottom_toBottomOf="parent"
--        app:layout_constraintEnd_toEndOf="parent"
--        app:layout_constraintStart_toStartOf="parent"
--        app:layout_constraintTop_toBottomOf="@+id/textView4"
--        app:layout_constraintVertical_bias="0.0" />
--
--    <Button
--        android:id="@+id/button"
--        android:layout_width="wrap_content"
--        android:layout_height="wrap_content"
--        android:layout_marginBottom="425dp"
--        android:layout_marginEnd="239dp"
--        android:layout_marginLeft="10dp"
--        android:layout_marginRight="239dp"
--        android:layout_marginStart="10dp"
--        android:text="@string/deleteAll2"
--        app:layout_constraintBottom_toBottomOf="parent"
--        app:layout_constraintEnd_toEndOf="parent"
--        app:layout_constraintStart_toStartOf="parent"
--        app:layout_constraintTop_toBottomOf="@+id/textView"
--        app:layout_constraintVertical_bias="0.0" />
--
--    <com.google.android.material.bottomnavigation.BottomNavigationView
--        android:id="@+id/bottomNav"
--        android:layout_width="match_parent"
--        android:layout_height="wrap_content"
--        android:layout_marginBottom="1dp"
--        android:layout_marginTop="367dp"
--        android:background="#d3d3d3"
--        app:layout_constraintBottom_toBottomOf="parent"
--        app:layout_constraintEnd_toEndOf="parent"
--        app:layout_constraintStart_toStartOf="parent"
--        app:layout_constraintTop_toBottomOf="@+id/button"
--        app:menu="@menu/bottom_nav" />
--</androidx.constraintlayout.widget.ConstraintLayout>
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_2020-11-14_7_08_PM__Default_Changelist_.xml
-===================================================================
---- .idea/shelf/Uncommitted_changes_before_Update_at_2020-11-14_7_08_PM__Default_Changelist_.xml	(revision 4aae76b2288305c355e0355ddc4a45783c62a78e)
-+++ .idea/shelf/Uncommitted_changes_before_Update_at_2020-11-14_7_08_PM__Default_Changelist_.xml	(revision 4aae76b2288305c355e0355ddc4a45783c62a78e)
-@@ -1,4 +0,0 @@
--<changelist name="Uncommitted_changes_before_Update_at_2020-11-14_7_08_PM_[Default_Changelist]" date="1605398923579" recycled="true" deleted="true">
--  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2020-11-14_7_08_PM_[Default_Changelist]/shelved.patch" />
--  <option name="DESCRIPTION" value="Uncommitted changes before Update at 2020-11-14 7:08 PM [Default Changelist]" />
--</changelist>
-\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_2020-11-14_10_17_PM_[Default_Changelist]/shelved.patch
-===================================================================
---- .idea/shelf/Uncommitted_changes_before_Update_at_2020-11-14_10_17_PM_[Default_Changelist]/shelved.patch	(revision 4aae76b2288305c355e0355ddc4a45783c62a78e)
-+++ .idea/shelf/Uncommitted_changes_before_Update_at_2020-11-14_10_17_PM_[Default_Changelist]/shelved.patch	(revision 4aae76b2288305c355e0355ddc4a45783c62a78e)
-@@ -1,219 +0,0 @@
--Index: app/src/main/java/com/example/cps731project/SignUp.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.example.cps731project;\n\nimport androidx.annotation.NonNull;\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.util.Log;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.ProgressBar;\nimport android.widget.TextView;\nimport android.widget.Toast;\n\nimport com.google.android.gms.tasks.OnCompleteListener;\nimport com.google.android.gms.tasks.OnFailureListener;\nimport com.google.android.gms.tasks.OnSuccessListener;\nimport com.google.android.gms.tasks.Task;\nimport com.google.firebase.firestore.CollectionReference;\nimport com.google.firebase.firestore.DocumentReference;\nimport com.google.firebase.firestore.DocumentSnapshot;\nimport com.google.firebase.firestore.FirebaseFirestore;\nimport com.google.firebase.firestore.Query;\nimport com.google.firebase.firestore.QuerySnapshot;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class SignUp extends AppCompatActivity {\n    public static final String EMAIL_KEY = \"email\";\n    public static final String NAME_KEY = \"name\";\n    public static final String PASSWORD_KEY = \"password\";\n\n    private Button register;\n    private EditText name;\n    private EditText email;\n    private EditText password;\n    private ProgressBar progress2;\n\n    FirebaseFirestore db = FirebaseFirestore.getInstance();\n    DocumentReference ref;// = db.collection(\"users\").document();\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_sign_up);\n\n        ref = db.collection(\"users\").document(\"email\");\n\n        progress2 = findViewById(R.id.progressBar2);\n        register = findViewById(R.id.btnRegister);\n        register.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                name = findViewById(R.id.name);\n                email = findViewById(R.id.email);\n                password = findViewById(R.id.password);\n\n                final String reg_name = name.getText().toString();\n                final String reg_email = email.getText().toString();\n                final String reg_password = password.getText().toString();\n\n                if(reg_name.isEmpty() || reg_email.isEmpty() || reg_password.isEmpty()) {\n                    Toast.makeText(SignUp.this, \"Text fields cannot be empty\", Toast.LENGTH_SHORT).show();\n                }\n                else if(reg_name.equals(\"\")){\n                    Toast.makeText(SignUp.this, \"Please enter your name\", Toast.LENGTH_SHORT).show();\n                }\n                else if(reg_email.equals(\"\")){\n                    Toast.makeText(SignUp.this, \"Please enter an email address\", Toast.LENGTH_SHORT).show();\n                }\n                else if(reg_password.equals(\"\")){\n                    Toast.makeText(SignUp.this, \"Please enter a password\", Toast.LENGTH_SHORT).show();\n                }\n                else {\n\n                    //This part is supposed to check if account already exists but it's not working not sure why\n                    ref.get().addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\n                        @Override\n\n                        public void onSuccess(DocumentSnapshot documentSnapshot) {\n                            progress2.setVisibility(View.VISIBLE);\n                            if (documentSnapshot.exists()){\n                                Toast.makeText(SignUp.this, \"Sorry,this user already exists\", Toast.LENGTH_SHORT).show();\n                                progress2.setVisibility(View.INVISIBLE);\n                            }else{\n                                Map<String, Object> newuser = new HashMap<>();\n                                newuser.put(NAME_KEY, reg_name);\n                                newuser.put(EMAIL_KEY, reg_email);\n                                newuser.put(PASSWORD_KEY, reg_password);\n\n                                db.collection(\"users\")\n                                        .add(newuser)\n                                        .addOnSuccessListener(new OnSuccessListener<DocumentReference>() {\n                                            @Override\n                                            public void onSuccess(DocumentReference documentReference) {\n                                                Toast.makeText(SignUp.this, \"Account successfully created\", Toast.LENGTH_SHORT).show();\n                                                startActivity(new Intent(SignUp.this, MainActivity.class));\n                                            }\n                                        })\n                                        .addOnFailureListener(new OnFailureListener() {\n                                            @Override\n                                            public void onFailure(@NonNull Exception e) {\n                                                Toast.makeText(SignUp.this, \"Error creating account\", Toast.LENGTH_LONG).show();\n                                                Log.d(\"Error\", e.getMessage());\n                                            }\n                                        });\n                            }\n                        }\n                    });\n\n                }\n            }\n        });\n        TextView hasAccount = findViewById(R.id.haveAccount);\n        hasAccount.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                startActivity(new Intent(SignUp.this, Login.class));\n            }\n        });\n\n    }\n}
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/java/com/example/cps731project/SignUp.java	(revision 0545ce405a3fe62e56edd91b986744e1e32cd065)
--+++ app/src/main/java/com/example/cps731project/SignUp.java	(date 1605409888503)
--@@ -1,33 +1,154 @@
-- package com.example.cps731project;
-- 
---import androidx.annotation.NonNull;
-- import androidx.appcompat.app.AppCompatActivity;
---
-- import android.content.Intent;
-- import android.os.Bundle;
---import android.util.Log;
-- import android.view.View;
-- import android.widget.Button;
-- import android.widget.EditText;
-- import android.widget.ProgressBar;
-- import android.widget.TextView;
---import android.widget.Toast;
--+import com.google.firebase.auth.FirebaseAuth;
--+
--+public class SignUp extends AppCompatActivity implements View.OnClickListener {
--+    private EditText mName, mEmail, mPassword;
--+    private Button register;
--+
--+    @Override
--+    protected void onCreate(Bundle savedInstanceState) {
--+        super.onCreate(savedInstanceState);
--+        setContentView(R.layout.activity_sign_up);
--+
--+        FirebaseAuth fAuth = FirebaseAuth.getInstance();
--+
--+        TextView login = findViewById(R.id.haveAccount);
--+        login.setOnClickListener(this);
--+
--+        register = findViewById(R.id.btnRegister);
--+        register.setOnClickListener(this);
--+
--+        mName = findViewById(R.id.name);
--+        mEmail = findViewById(R.id.email);
--+        mPassword = findViewById(R.id.password);
--+        ProgressBar progress2 = findViewById(R.id.progressBar2);
--+    }
--+
--+    @Override
--+    public void onClick(View v) {
--+        if (v.getId() == R.id.haveAccount) {
--+            startActivity(new Intent(this, Login.class));
--+        } else if (v.getId() == R.id.btnRegister) {
--+            registerUser();
--+        }
--+    }
--+
--+    private void registerUser() {
--+        String name = mName.getText().toString().trim();
--+        String email = mEmail.getText().toString().trim();
--+        String password = mPassword.getText().toString().trim();
--+
--+        if(name.isEmpty()) {
--+            mName.setError("Full name is required!");
--+            mName.requestFocus();
--+            return;
--+        }
--+        if(email.isEmpty()) {
--+            mEmail.setError("Email is required!");
--+            mEmail.requestFocus();
--+            return;
--+        }
--+        if(password.isEmpty()) {
--+            mPassword.setError("Password is required!");
--+            mPassword.requestFocus();
--+            return;
--+        }
--+        if(password.length() < 6) {
--+            mPassword.setError("Password should be at least 6 characters!");
--+        }
--+
--+    }
--+}
--+    /*public static final String EMAIL_KEY = "email";
--+    public static final String NAME_KEY = "name";
--+    public static final String PASSWORD_KEY = "password";
--+    public static final String TAG = "TAG";
--+    private EditText name, email, password;
--+    private Button register;
--+    private FirebaseAuth fAuth;
--+    private ProgressBar progress2;
--+    FirebaseFirestore db;
--+    String userID;
-- 
---import com.google.android.gms.tasks.OnCompleteListener;
---import com.google.android.gms.tasks.OnFailureListener;
---import com.google.android.gms.tasks.OnSuccessListener;
---import com.google.android.gms.tasks.Task;
---import com.google.firebase.firestore.CollectionReference;
---import com.google.firebase.firestore.DocumentReference;
---import com.google.firebase.firestore.DocumentSnapshot;
---import com.google.firebase.firestore.FirebaseFirestore;
---import com.google.firebase.firestore.Query;
---import com.google.firebase.firestore.QuerySnapshot;
--+    @Override
--+    protected void onCreate(Bundle savedInstanceState) {
--+        super.onCreate(savedInstanceState);
--+        setContentView(R.layout.activity_sign_up);
-- 
---import java.util.HashMap;
---import java.util.Map;
--+        name = findViewById(R.id.name);
--+        email = findViewById(R.id.email);
--+        password = findViewById(R.id.password);
--+        register = findViewById(R.id.btnRegister);
-- 
---public class SignUp extends AppCompatActivity {
--+        fAuth = FirebaseAuth.getInstance();
--+        db = FirebaseFirestore.getInstance();
--+        progress2 = findViewById(R.id.progressBar2);
--+
--+        if (fAuth.getCurrentUser() != null) {
--+            startActivity(new Intent(getApplicationContext(), MainActivity.class));
--+            finish();
--+        }
--+
--+        register.setOnClickListener(new View.OnClickListener() {
--+            @Override
--+            public void onClick(View v) {
--+                final String regName = name.getText().toString();
--+                final String regEmail = email.getText().toString().trim();
--+                final String regPassword = password.getText().toString().trim();
--+
--+
--+                if (regEmail.equals("")) {
--+                    email.setError("Email is required");
--+                }
--+                if (regPassword.equals("")) {
--+                    email.setError("Email is required");
--+                }
--+                if (password.length() < 6) {
--+                    password.setError("Password must be at least 6 Characters");
--+                    return;
--+                }
--+
--+                progress2.setVisibility(View.VISIBLE);
--+
--+                fAuth.createUserWithEmailAndPassword(regName, regEmail)
--+                        .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {
--+                            @Override
--+                            public void onComplete(@NonNull Task<AuthResult> task) {
--+                                if (task.isSuccessful()) {
--+                                    Toast.makeText(SignUp.this, "User Created.", Toast.LENGTH_SHORT).show();
--+                                    userID = fAuth.getCurrentUser().getUid();
--+                                    DocumentReference doc = db.collection("users").document(userID);
--+                                    Map<String, Object> newUser = new HashMap<>();
--+                                    newUser.put(NAME_KEY, regName);
--+                                    newUser.put(EMAIL_KEY, regEmail);
--+                                    newUser.put(PASSWORD_KEY, regPassword);
--+                                    doc.set(newUser).addOnSuccessListener(new OnSuccessListener<Void>() {
--+                                        @Override
--+                                        public void onSuccess(Void aVoid) {
--+                                            Log.d(TAG, "onSuccess: user Profile is created for " + userID);
--+                                        }
--+                                    });
--+                                    startActivity(new Intent(getApplicationContext(), MainActivity.class));
--+                                } else {
--+                                    Toast.makeText(SignUp.this, "Error!" + task.getException().getMessage(), Toast.LENGTH_SHORT).show();
--+                                    progress2.setVisibility(View.GONE);
--+                                }
--+
--+                            }
--+
--+                        });
--+            }
--+        });
--+    }
--     public static final String EMAIL_KEY = "email";
--     public static final String NAME_KEY = "name";
--     public static final String PASSWORD_KEY = "password";
--@@ -119,7 +240,4 @@
--             public void onClick(View v) {
--                 startActivity(new Intent(SignUp.this, Login.class));
--             }
---        });
---
---    }
---}
--\ No newline at end of file
--+        });*/
--\ No newline at end of file
--Index: app/src/main/java/com/example/cps731project/Login.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.example.cps731project;\n\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.EditText;\n//import android.widget.ProgressBar;\nimport android.widget.TextView;\nimport android.widget.Toast;\n\nimport com.google.firebase.auth.FirebaseAuth;\n\n\npublic class Login extends AppCompatActivity {\n\n    private EditText logEmail;\n    private EditText logPassword;\n\n    private final FirebaseAuth db = FirebaseAuth.getInstance();\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_login);\n\n        logEmail = findViewById(R.id.loginEmail);\n        logPassword = findViewById(R.id.loginPassword);\n        Button login = findViewById(R.id.btnLogin);\n        //ProgressBar progress = findViewById(R.id.progressBar);\n\n        login.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                final String userEmail = logEmail.getText().toString().trim();\n                final String userPassword = logPassword.getText().toString();\n\n                if(userEmail.isEmpty() || userPassword.isEmpty()) {\n                    Toast.makeText(Login.this, \"Text fields cannot be empty\", Toast.LENGTH_SHORT).show();\n                }else{\n\n\n            }\n        });\n        TextView doesntHaveAccount = findViewById(R.id.dontHaveAccount);\n        doesntHaveAccount.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                startActivity(new Intent(Login.this, SignUp.class));\n            }\n            }\n        });\n    }\n}
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/java/com/example/cps731project/Login.java	(revision 0545ce405a3fe62e56edd91b986744e1e32cd065)
--+++ app/src/main/java/com/example/cps731project/Login.java	(date 1605399272375)
--@@ -39,7 +39,7 @@
-- 
--                 if(userEmail.isEmpty() || userPassword.isEmpty()) {
--                     Toast.makeText(Login.this, "Text fields cannot be empty", Toast.LENGTH_SHORT).show();
---                }else{
--+                }
-- 
-- 
--             }
--@@ -50,7 +50,6 @@
--             public void onClick(View v) {
--                 startActivity(new Intent(Login.this, SignUp.class));
--             }
---            }
--         });
--     }
-- }
--\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_2020-11-14_7_08_PM_[Default_Changelist]/shelved.patch
-===================================================================
---- .idea/shelf/Uncommitted_changes_before_Update_at_2020-11-14_7_08_PM_[Default_Changelist]/shelved.patch	(revision 4aae76b2288305c355e0355ddc4a45783c62a78e)
-+++ .idea/shelf/Uncommitted_changes_before_Update_at_2020-11-14_7_08_PM_[Default_Changelist]/shelved.patch	(revision 4aae76b2288305c355e0355ddc4a45783c62a78e)
-@@ -1,275 +0,0 @@
--Index: app/src/main/res/layout/activity_login.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    tools:context=\".Login\">\n\n    <TextView\n        android:id=\"@+id/ezFood\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"@string/ezFood\"\n        android:textSize=\"36sp\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.498\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.126\" />\n\n    <TextView\n        android:id=\"@+id/createAccount\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"16dp\"\n        android:text=\"@string/createAccount\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.498\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/ezFood\" />\n\n    <EditText\n        android:id=\"@+id/loginEmail\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"48dp\"\n        android:ems=\"10\"\n        android:hint=\"@string/email\"\n        android:inputType=\"textEmailAddress\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/createAccount\"\n        android:autofillHints=\"\"/>\n\n    <EditText\n        android:id=\"@+id/loginPassword\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"20dp\"\n        android:ems=\"10\"\n        android:hint=\"@string/password\"\n        android:inputType=\"textPassword\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/loginEmail\"\n        android:autofillHints=\"\" />\n\n    <Button\n        android:id=\"@+id/btnLogin\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"50dp\"\n        android:text=\"@string/login\"\n        android:textSize=\"24sp\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/loginPassword\" />\n\n    <TextView\n        android:id=\"@+id/textView\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"24dp\"\n        android:text=\"@string/dontHaveAccount\"\n        android:textSize=\"16sp\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.492\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/btnLogin\"\n        app:layout_constraintVertical_bias=\"0.0\" />\n\n    <ProgressBar\n        android:id=\"@+id/progressBar\"\n        style=\"?android:attr/progressBarStyle\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:visibility=\"invisible\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.498\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/textView\"\n        app:layout_constraintVertical_bias=\"0.237\" />\n\n</androidx.constraintlayout.widget.ConstraintLayout>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/res/layout/activity_login.xml	(revision cf8e9292a330a6aadbd1b7f99221910dce4b7e57)
--+++ app/src/main/res/layout/activity_login.xml	(date 1605397625923)
--@@ -20,11 +20,11 @@
--         app:layout_constraintVertical_bias="0.126" />
-- 
--     <TextView
---        android:id="@+id/createAccount"
--+        android:id="@+id/loginHere"
--         android:layout_width="wrap_content"
--         android:layout_height="wrap_content"
--         android:layout_marginTop="16dp"
---        android:text="@string/createAccount"
--+        android:text="@string/loginHere"
--         app:layout_constraintEnd_toEndOf="parent"
--         app:layout_constraintHorizontal_bias="0.498"
--         app:layout_constraintStart_toStartOf="parent"
--@@ -40,7 +40,7 @@
--         android:inputType="textEmailAddress"
--         app:layout_constraintEnd_toEndOf="parent"
--         app:layout_constraintStart_toStartOf="parent"
---        app:layout_constraintTop_toBottomOf="@+id/createAccount"
--+        app:layout_constraintTop_toBottomOf="@+id/loginHere"
--         android:autofillHints=""/>
-- 
--     <EditText
--@@ -68,7 +68,7 @@
--         app:layout_constraintTop_toBottomOf="@+id/loginPassword" />
-- 
--     <TextView
---        android:id="@+id/textView"
--+        android:id="@+id/dontHaveAccount"
--         android:layout_width="wrap_content"
--         android:layout_height="wrap_content"
--         android:layout_marginTop="24dp"
--@@ -91,7 +91,7 @@
--         app:layout_constraintEnd_toEndOf="parent"
--         app:layout_constraintHorizontal_bias="0.498"
--         app:layout_constraintStart_toStartOf="parent"
---        app:layout_constraintTop_toBottomOf="@+id/textView"
--+        app:layout_constraintTop_toBottomOf="@+id/dontHaveAccount"
--         app:layout_constraintVertical_bias="0.237" />
-- 
-- </androidx.constraintlayout.widget.ConstraintLayout>
--\ No newline at end of file
--Index: app/src/main/res/values/strings.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><resources>\n    <string name=\"app_name\">CPS731Project</string>\n    <string name=\"ezFood\">EZ Food</string>\n    <string name=\"createAccount\">Create An Account</string>\n    <string name=\"email\">Email</string>\n    <string name=\"password\">Password</string>\n    <string name=\"login\">LOGIN</string>\n    <string name=\"dontHaveAccount\">Don\\'t have an account? Create one here</string>\n    <string name=\"addIngredient\">Add Ingredient</string>\n    <string name=\"btnAdd\">ADD</string>\n    <string name=\"whatToEat\">What do you want to eat?</string>\n    <string name=\"ingredientsYouHave\">Ingredients You Have</string>\n    <string name=\"btnGo\">GO</string>\n    <string-array name=\"meals\">\n        <item>Snack</item>\n        <item>Breakfast</item>\n        <item>Lunch</item>\n        <item>Dinner</item>\n    </string-array>\n</resources>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/res/values/strings.xml	(revision cf8e9292a330a6aadbd1b7f99221910dce4b7e57)
--+++ app/src/main/res/values/strings.xml	(date 1605397625943)
--@@ -4,6 +4,7 @@
--     <string name="createAccount">Create An Account</string>
--     <string name="email">Email</string>
--     <string name="password">Password</string>
--+    <string name="loginHere">Please Login</string>
--     <string name="login">LOGIN</string>
--     <string name="dontHaveAccount">Don\'t have an account? Create one here</string>
--     <string name="addIngredient">Add Ingredient</string>
--Index: app/src/main/java/com/example/cps731project/SignUp.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.example.cps731project;\n\nimport androidx.annotation.NonNull;\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.util.Log;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.ProgressBar;\nimport android.widget.TextView;\nimport android.widget.Toast;\n\nimport com.google.android.gms.tasks.OnCompleteListener;\nimport com.google.android.gms.tasks.OnFailureListener;\nimport com.google.android.gms.tasks.OnSuccessListener;\nimport com.google.android.gms.tasks.Task;\nimport com.google.firebase.firestore.CollectionReference;\nimport com.google.firebase.firestore.DocumentReference;\nimport com.google.firebase.firestore.DocumentSnapshot;\nimport com.google.firebase.firestore.FirebaseFirestore;\nimport com.google.firebase.firestore.Query;\nimport com.google.firebase.firestore.QuerySnapshot;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class SignUp extends AppCompatActivity {\n    public static final String EMAIL_KEY = \"email\";\n    public static final String NAME_KEY = \"name\";\n    public static final String PASSWORD_KEY = \"password\";\n\n    private Button register;\n    private EditText name;\n    private EditText email;\n    private EditText password;\n    private ProgressBar progress2;\n\n    FirebaseFirestore db = FirebaseFirestore.getInstance();\n    DocumentReference ref;// = db.collection(\"users\").document();\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_sign_up);\n\n        ref = db.collection(\"users\").document();\n\n        progress2 = findViewById(R.id.progressBar2);\n        register = findViewById(R.id.btnRegister);\n        register.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                name = findViewById(R.id.name);\n                email = findViewById(R.id.email);\n                password =findViewById(R.id.password);\n\n                final String reg_name = name.getText().toString();\n                final String reg_email = email.getText().toString();\n                final String reg_password = password.getText().toString();\n\n                if(reg_name.equals(\"\")){\n                    Toast.makeText(SignUp.this, \"Please enter your name\", Toast.LENGTH_SHORT).show();\n                }else if(reg_email.equals(\"\")){\n                    Toast.makeText(SignUp.this, \"Please enter an email address\", Toast.LENGTH_SHORT).show();\n                }else if(reg_password.equals(\"\")){\n                    Toast.makeText(SignUp.this, \"Please enter a password\", Toast.LENGTH_SHORT).show();\n                }else {\n\n                    //This part is supposed to check if account already exists but it's not working not sure why\n                    ref.get().addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\n                        @Override\n\n                        public void onSuccess(DocumentSnapshot documentSnapshot) {\n                            progress2.setVisibility(View.VISIBLE);\n                            if (documentSnapshot.exists()){\n                                Toast.makeText(SignUp.this, \"Sorry,this user already exists\", Toast.LENGTH_SHORT).show();\n                            }else{\n                                Map<String, Object> users = new HashMap<>();\n                                users.put(NAME_KEY, reg_name);\n                                users.put(EMAIL_KEY, reg_email);\n                                users.put(PASSWORD_KEY, reg_password);\n\n                                db.collection(\"users\")\n                                        .add(users)\n                                        .addOnSuccessListener(new OnSuccessListener<DocumentReference>() {\n                                            @Override\n                                            public void onSuccess(DocumentReference documentReference) {\n                                                Toast.makeText(SignUp.this, \"Account successfully created\", Toast.LENGTH_SHORT).show();\n                                                startActivity(new Intent(SignUp.this, MainActivity.class));\n                                            }\n                                        })\n                                        .addOnFailureListener(new OnFailureListener() {\n                                            @Override\n                                            public void onFailure(@NonNull Exception e) {\n                                                Toast.makeText(SignUp.this, \"Error creating account\", Toast.LENGTH_LONG).show();\n                                                Log.d(\"Error\", e.getMessage());\n                                            }\n                                        });\n                            }\n                        }\n                    });\n\n                }\n            }\n        });\n        TextView hasAccount = findViewById(R.id.haveAccount);\n        hasAccount.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                startActivity(new Intent(SignUp.this, Login.class));\n            }\n        });\n\n    }\n}
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/java/com/example/cps731project/SignUp.java	(revision cf8e9292a330a6aadbd1b7f99221910dce4b7e57)
--+++ app/src/main/java/com/example/cps731project/SignUp.java	(date 1605397786246)
--@@ -55,19 +55,25 @@
--             public void onClick(View v) {
--                 name = findViewById(R.id.name);
--                 email = findViewById(R.id.email);
---                password =findViewById(R.id.password);
--+                password = findViewById(R.id.password);
-- 
--                 final String reg_name = name.getText().toString();
--                 final String reg_email = email.getText().toString();
--                 final String reg_password = password.getText().toString();
-- 
---                if(reg_name.equals("")){
--+                if(reg_name.isEmpty() || reg_email.isEmpty() || reg_password.isEmpty()) {
--+                    Toast.makeText(SignUp.this, "Text fields cannot be empty", Toast.LENGTH_SHORT).show();
--+                }
--+                else if(reg_name.equals("")){
--                     Toast.makeText(SignUp.this, "Please enter your name", Toast.LENGTH_SHORT).show();
---                }else if(reg_email.equals("")){
--+                }
--+                else if(reg_email.equals("")){
--                     Toast.makeText(SignUp.this, "Please enter an email address", Toast.LENGTH_SHORT).show();
---                }else if(reg_password.equals("")){
--+                }
--+                else if(reg_password.equals("")){
--                     Toast.makeText(SignUp.this, "Please enter a password", Toast.LENGTH_SHORT).show();
---                }else {
--+                }
--+                else {
-- 
--                     //This part is supposed to check if account already exists but it's not working not sure why
--                     ref.get().addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {
--Index: app/src/main/java/com/example/cps731project/Login.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.example.cps731project;\n\nimport androidx.annotation.NonNull;\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.ProgressBar;\nimport android.widget.Toast;\n\nimport com.google.android.gms.tasks.OnCompleteListener;\nimport com.google.android.gms.tasks.Task;\nimport com.google.firebase.firestore.FirebaseFirestore;\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\nimport com.google.firebase.firestore.QuerySnapshot;\n\npublic class Login extends AppCompatActivity {\n\n    private EditText email;\n    private EditText password;\n    private ProgressBar progress;\n\n    FirebaseFirestore db = FirebaseFirestore.getInstance();\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_login);\n\n        email = findViewById(R.id.loginEmail);\n        password = findViewById(R.id.loginPassword);\n        Button login = findViewById(R.id.btnLogin);\n        progress = findViewById(R.id.progressBar);\n\n        login.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                final String logEmail = email.getText().toString();\n                final String logPass = password.getText().toString();\n\n                if (logEmail != null && !logEmail.isEmpty()) {\n                    Toast.makeText(Login.this, \"Please enter valid email\", Toast.LENGTH_SHORT).show();\n                } else if (logPass != null && !logPass.isEmpty()) {\n                    Toast.makeText(Login.this, \"Please enter valid password\", Toast.LENGTH_SHORT).show();\n                }\n                progress.setVisibility(View.VISIBLE);\n                db.collection(\"users\")\n                        .get()\n                        .addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\n                            @Override\n                            public void onComplete(@NonNull Task<QuerySnapshot> task) {\n                                if (task.isSuccessful()) {\n                                    for (QueryDocumentSnapshot doc : task.getResult()) {\n                                        String a1 = logEmail.trim();\n                                        String b1 = logPass.trim();\n                                        if (email.getText().toString().equalsIgnoreCase(a1) & logPass.equalsIgnoreCase(b1)) {\n                                            startActivity(new Intent(Login.this, MainActivity.class));\n                                            Toast.makeText(Login.this, \"Logged In\", Toast.LENGTH_SHORT).show();\n                                        } else {\n                                            Toast.makeText(Login.this, \"Cannot login,incorrect Email and Password\", Toast.LENGTH_SHORT).show();\n                                        }\n                                    }\n                                }\n                            }\n                        });\n            }\n        });\n    }\n}
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/java/com/example/cps731project/Login.java	(revision cf8e9292a330a6aadbd1b7f99221910dce4b7e57)
--+++ app/src/main/java/com/example/cps731project/Login.java	(date 1605397297284)
--@@ -1,6 +1,5 @@
-- package com.example.cps731project;
-- 
---import androidx.annotation.NonNull;
-- import androidx.appcompat.app.AppCompatActivity;
-- 
-- import android.content.Intent;
--@@ -8,64 +7,48 @@
-- import android.view.View;
-- import android.widget.Button;
-- import android.widget.EditText;
---import android.widget.ProgressBar;
--+//import android.widget.ProgressBar;
--+import android.widget.TextView;
-- import android.widget.Toast;
-- 
---import com.google.android.gms.tasks.OnCompleteListener;
---import com.google.android.gms.tasks.Task;
---import com.google.firebase.firestore.FirebaseFirestore;
---import com.google.firebase.firestore.QueryDocumentSnapshot;
---import com.google.firebase.firestore.QuerySnapshot;
--+import com.google.firebase.auth.FirebaseAuth;
--+
-- 
-- public class Login extends AppCompatActivity {
-- 
---    private EditText email;
---    private EditText password;
---    private ProgressBar progress;
--+    private EditText logEmail;
--+    private EditText logPassword;
-- 
---    FirebaseFirestore db = FirebaseFirestore.getInstance();
--+    private final FirebaseAuth db = FirebaseAuth.getInstance();
-- 
--     @Override
--     protected void onCreate(Bundle savedInstanceState) {
--         super.onCreate(savedInstanceState);
--         setContentView(R.layout.activity_login);
-- 
---        email = findViewById(R.id.loginEmail);
---        password = findViewById(R.id.loginPassword);
--+        logEmail = findViewById(R.id.loginEmail);
--+        logPassword = findViewById(R.id.loginPassword);
--         Button login = findViewById(R.id.btnLogin);
---        progress = findViewById(R.id.progressBar);
--+        //ProgressBar progress = findViewById(R.id.progressBar);
-- 
--         login.setOnClickListener(new View.OnClickListener() {
--             @Override
--             public void onClick(View v) {
---                final String logEmail = email.getText().toString();
---                final String logPass = password.getText().toString();
--+                final String userEmail = logEmail.getText().toString().trim();
--+                final String userPassword = logPassword.getText().toString();
-- 
---                if (logEmail != null && !logEmail.isEmpty()) {
---                    Toast.makeText(Login.this, "Please enter valid email", Toast.LENGTH_SHORT).show();
---                } else if (logPass != null && !logPass.isEmpty()) {
---                    Toast.makeText(Login.this, "Please enter valid password", Toast.LENGTH_SHORT).show();
--+                if(userEmail.isEmpty() || userPassword.isEmpty()) {
--+                    Toast.makeText(Login.this, "Text fields cannot be empty", Toast.LENGTH_SHORT).show();
--                 }
---                progress.setVisibility(View.VISIBLE);
---                db.collection("users")
---                        .get()
---                        .addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {
---                            @Override
---                            public void onComplete(@NonNull Task<QuerySnapshot> task) {
---                                if (task.isSuccessful()) {
---                                    for (QueryDocumentSnapshot doc : task.getResult()) {
---                                        String a1 = logEmail.trim();
---                                        String b1 = logPass.trim();
---                                        if (email.getText().toString().equalsIgnoreCase(a1) & logPass.equalsIgnoreCase(b1)) {
---                                            startActivity(new Intent(Login.this, MainActivity.class));
---                                            Toast.makeText(Login.this, "Logged In", Toast.LENGTH_SHORT).show();
---                                        } else {
---                                            Toast.makeText(Login.this, "Cannot login,incorrect Email and Password", Toast.LENGTH_SHORT).show();
---                                        }
---                                    }
---                                }
---                            }
---                        });
--+
--+
--+            }
--+        });
--+        TextView doesntHaveAccount = findViewById(R.id.dontHaveAccount);
--+        doesntHaveAccount.setOnClickListener(new View.OnClickListener() {
--+            @Override
--+            public void onClick(View v) {
--+                startActivity(new Intent(Login.this, SignUp.class));
--             }
--         });
--     }
--Index: build.gradle
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>// Top-level build file where you can add configuration options common to all sub-projects/modules.\nbuildscript {\n    repositories {\n        google()\n        jcenter()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:4.1.0'\n        classpath 'com.google.gms:google-services:4.3.4'\n        // NOTE: Do not place your application dependencies here; they belong\n        // in the individual module build.gradle files\n    }\n}\n\nallprojects {\n    repositories {\n        google()\n        jcenter()\n    }\n}\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- build.gradle	(revision cf8e9292a330a6aadbd1b7f99221910dce4b7e57)
--+++ build.gradle	(date 1605398429839)
--@@ -5,7 +5,7 @@
--         jcenter()
--     }
--     dependencies {
---        classpath 'com.android.tools.build:gradle:4.1.0'
--+        classpath 'com.android.tools.build:gradle:4.1.1'
--         classpath 'com.google.gms:google-services:4.3.4'
--         // NOTE: Do not place your application dependencies here; they belong
--         // in the individual module build.gradle files
--Index: app/src/main/res/layout/activity_sign_up.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    tools:context=\".SignUp\">\n\n    <TextView\n        android:id=\"@+id/textView2\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"EZ Food\"\n        android:textSize=\"36sp\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.498\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.133\" />\n\n    <TextView\n        android:id=\"@+id/textView3\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"16dp\"\n        android:text=\"Create An Account\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/textView2\" />\n\n    <EditText\n        android:id=\"@+id/name\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"36dp\"\n        android:ems=\"10\"\n        android:hint=\"Full Name\"\n        android:inputType=\"textPersonName\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/textView3\" />\n\n    <EditText\n        android:id=\"@+id/email\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"12dp\"\n        android:ems=\"10\"\n        android:hint=\"Email\"\n        android:inputType=\"textPersonName\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/name\" />\n\n    <EditText\n        android:id=\"@+id/password\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"12dp\"\n        android:ems=\"10\"\n        android:hint=\"Password\"\n        android:inputType=\"textPassword\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/email\" />\n\n    <Button\n        android:id=\"@+id/btnRegister\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"28dp\"\n        android:text=\"REGISTER\"\n        android:textSize=\"24sp\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.496\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/password\" />\n\n    <TextView\n        android:id=\"@+id/haveAccount\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"28dp\"\n        android:text=\"Have an Account? Login here.\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/btnRegister\" />\n\n    <ProgressBar\n        android:id=\"@+id/progressBar2\"\n        style=\"?android:attr/progressBarStyle\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"28dp\"\n        android:visibility=\"invisible\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.498\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/haveAccount\" />\n\n</androidx.constraintlayout.widget.ConstraintLayout>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/res/layout/activity_sign_up.xml	(revision cf8e9292a330a6aadbd1b7f99221910dce4b7e57)
--+++ app/src/main/res/layout/activity_sign_up.xml	(date 1605397297295)
--@@ -10,7 +10,7 @@
--         android:id="@+id/textView2"
--         android:layout_width="wrap_content"
--         android:layout_height="wrap_content"
---        android:text="EZ Food"
--+        android:text="@string/ezFood"
--         android:textSize="36sp"
--         app:layout_constraintBottom_toBottomOf="parent"
--         app:layout_constraintEnd_toEndOf="parent"
--@@ -24,7 +24,7 @@
--         android:layout_width="wrap_content"
--         android:layout_height="wrap_content"
--         android:layout_marginTop="16dp"
---        android:text="Create An Account"
--+        android:text="@string/createAccount"
--         app:layout_constraintEnd_toEndOf="parent"
--         app:layout_constraintStart_toStartOf="parent"
--         app:layout_constraintTop_toBottomOf="@+id/textView2" />
--@@ -48,7 +48,7 @@
--         android:layout_marginTop="12dp"
--         android:ems="10"
--         android:hint="Email"
---        android:inputType="textPersonName"
--+        android:inputType="textEmailAddress"
--         app:layout_constraintEnd_toEndOf="parent"
--         app:layout_constraintStart_toStartOf="parent"
--         app:layout_constraintTop_toBottomOf="@+id/name" />
--@@ -59,7 +59,7 @@
--         android:layout_height="wrap_content"
--         android:layout_marginTop="12dp"
--         android:ems="10"
---        android:hint="Password"
--+        android:hint="@string/password"
--         android:inputType="textPassword"
--         app:layout_constraintEnd_toEndOf="parent"
--         app:layout_constraintStart_toStartOf="parent"
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_2020-11-14_10_17_PM__Default_Changelist_.xml
-===================================================================
---- .idea/shelf/Uncommitted_changes_before_Update_at_2020-11-14_10_17_PM__Default_Changelist_.xml	(revision 4aae76b2288305c355e0355ddc4a45783c62a78e)
-+++ .idea/shelf/Uncommitted_changes_before_Update_at_2020-11-14_10_17_PM__Default_Changelist_.xml	(revision 4aae76b2288305c355e0355ddc4a45783c62a78e)
-@@ -1,4 +0,0 @@
--<changelist name="Uncommitted_changes_before_Update_at_2020-11-14_10_17_PM_[Default_Changelist]" date="1605410451465" recycled="true" deleted="true">
--  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2020-11-14_10_17_PM_[Default_Changelist]/shelved.patch" />
--  <option name="DESCRIPTION" value="Uncommitted changes before Update at 2020-11-14 10:17 PM [Default Changelist]" />
--</changelist>
-\ No newline at end of file
-Index: app/src/main/res/layout/activity_view_favs.xml
-===================================================================
---- app/src/main/res/layout/activity_view_favs.xml	(revision 4aae76b2288305c355e0355ddc4a45783c62a78e)
-+++ app/src/main/res/layout/activity_view_favs.xml	(revision 4aae76b2288305c355e0355ddc4a45783c62a78e)
-@@ -1,68 +0,0 @@
--<?xml version="1.0" encoding="utf-8"?>
--<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
--    xmlns:app="http://schemas.android.com/apk/res-auto"
--    xmlns:tools="http://schemas.android.com/tools"
--    android:layout_width="match_parent"
--    android:layout_height="match_parent"
--    tools:context=".ViewFavourites">
--
--    <TextView
--        android:id="@+id/favourites"
--        android:layout_width="392dp"
--        android:layout_height="47dp"
--        android:layout_marginBottom="529dp"
--        android:layout_marginTop="32dp"
--        android:text="@string/favourites"
--        android:textSize="30sp"
--        app:layout_constraintBottom_toBottomOf="parent"
--        app:layout_constraintEnd_toEndOf="parent"
--        app:layout_constraintStart_toStartOf="parent"
--        app:layout_constraintTop_toTopOf="parent" />
--
--    <TextView
--        android:id="@+id/favDescription"
--        android:layout_width="386dp"
--        android:layout_height="52dp"
--        android:layout_marginBottom="474dp"
--        android:layout_marginEnd="16dp"
--        android:layout_marginLeft="9dp"
--        android:layout_marginRight="16dp"
--        android:layout_marginStart="9dp"
--        android:layout_marginTop="1dp"
--        android:text="@string/none"
--        android:textSize="20sp"
--        app:layout_constraintBottom_toBottomOf="parent"
--        app:layout_constraintEnd_toEndOf="parent"
--        app:layout_constraintStart_toStartOf="parent"
--        app:layout_constraintTop_toBottomOf="@+id/favourites"
--        app:layout_constraintVertical_bias="0.0" />
--
--    <Button
--        android:id="@+id/deleteFavs"
--        android:layout_width="wrap_content"
--        android:layout_height="wrap_content"
--        android:layout_marginBottom="425dp"
--        android:layout_marginEnd="216dp"
--        android:layout_marginLeft="10dp"
--        android:layout_marginRight="216dp"
--        android:layout_marginStart="10dp"
--        android:text="@string/deleteAll"
--        app:layout_constraintBottom_toBottomOf="parent"
--        app:layout_constraintEnd_toEndOf="parent"
--        app:layout_constraintStart_toStartOf="parent"
--        app:layout_constraintTop_toBottomOf="@+id/favDescription"
--        app:layout_constraintVertical_bias="0.0" />
--
--    <com.google.android.material.bottomnavigation.BottomNavigationView
--        android:id="@+id/bottomNav"
--        android:layout_width="match_parent"
--        android:layout_height="wrap_content"
--        android:layout_marginTop="367dp"
--        android:background="#d3d3d3"
--        app:layout_constraintBottom_toBottomOf="parent"
--        app:layout_constraintEnd_toEndOf="parent"
--        app:layout_constraintHorizontal_bias="0.0"
--        app:layout_constraintStart_toStartOf="parent"
--        app:layout_constraintTop_toBottomOf="@+id/deleteFavs"
--        app:menu="@menu/bottom_nav" />
--</androidx.constraintlayout.widget.ConstraintLayout>
-Index: app/src/main/java/com/example/cps731project/ViewAccount.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.cps731project;\n\nimport androidx.annotation.NonNull;\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.util.Log;\nimport android.view.View;\nimport android.widget.Button;\n\nimport com.google.android.gms.tasks.OnCompleteListener;\nimport com.google.android.gms.tasks.Task;\nimport com.google.firebase.firestore.CollectionReference;\nimport com.google.firebase.firestore.DocumentReference;\nimport com.google.firebase.firestore.FirebaseFirestore;\nimport com.google.firebase.firestore.Query;\nimport com.google.firebase.firestore.QuerySnapshot;\n\npublic class ViewAccount extends AppCompatActivity {\n\n    FirebaseFirestore db;\n    private Button logout;\n    private Button deleteAcc;\n    DocumentReference doc;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_view_account);\n\n        final String id = UserID.user_id;\n        db = FirebaseFirestore.getInstance();\n        doc = db.collection(\"users\").document(id);\n\n        //LOGOUT BUTTON\n        logout = findViewById(R.id.btnLogout);\n        logout.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                startActivity(new Intent(ViewAccount.this, Login.class));\n            }\n        });\n\n        //DELETE ACCOUNT BUTTON\n        deleteAcc = findViewById(R.id.btnDeleteAcc);\n        deleteAcc.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                /*CollectionReference usersRef = db.collection(\"users\");\n                Query query = usersRef.whereEqualTo(\"email\", id);\n                query.get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\n                    @Override\n                    public void onComplete(@NonNull Task<QuerySnapshot> task) {\n                        if(task.isSuccessful()){\n                            doc.delete();\n                        }\n                    }\n                });*/\n\n                doc.delete();\n                startActivity(new Intent(ViewAccount.this, Login.class));\n            }\n        });\n    }\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/cps731project/ViewAccount.java	(revision 4aae76b2288305c355e0355ddc4a45783c62a78e)
-+++ app/src/main/java/com/example/cps731project/ViewAccount.java	(date 1606097269904)
-@@ -1,27 +1,21 @@
- package com.example.cps731project;
- 
--import androidx.annotation.NonNull;
--import androidx.appcompat.app.AppCompatActivity;
--
- import android.content.Intent;
- import android.os.Bundle;
--import android.util.Log;
-+import android.view.MenuItem;
- import android.view.View;
- import android.widget.Button;
- 
--import com.google.android.gms.tasks.OnCompleteListener;
--import com.google.android.gms.tasks.Task;
--import com.google.firebase.firestore.CollectionReference;
-+import com.google.android.material.bottomnavigation.BottomNavigationView;
- import com.google.firebase.firestore.DocumentReference;
- import com.google.firebase.firestore.FirebaseFirestore;
--import com.google.firebase.firestore.Query;
--import com.google.firebase.firestore.QuerySnapshot;
-+
-+import androidx.annotation.NonNull;
-+import androidx.appcompat.app.AppCompatActivity;
- 
- public class ViewAccount extends AppCompatActivity {
- 
-     FirebaseFirestore db;
--    private Button logout;
--    private Button deleteAcc;
-     DocumentReference doc;
- 
-     @Override
-@@ -29,12 +23,43 @@
-         super.onCreate(savedInstanceState);
-         setContentView(R.layout.activity_view_account);
- 
-+        /*BottomNavigationView bottomNavigationView = findViewById(R.id.bottomNav);
-+        bottomNavigationView.setOnNavigationItemSelectedListener(new BottomNavigationView
-+                .OnNavigationItemSelectedListener() {
-+
-+            @Override
-+            public boolean onNavigationItemSelected(@NonNull final MenuItem item) {
-+                int id = item.getItemId();
-+                if (id == R.id.mainActivity) {
-+
-+                    Intent viewHome = new Intent(ViewAccount.this, MainActivity.class);
-+                    ViewAccount.this.startActivity(viewHome);
-+                    return true;
-+                }
-+                /*if (id == R.id.viewFavourites) {
-+                    Toast.makeText(MainActivity.this, "Favs has been clicked", Toast.LENGTH_LONG).show();
-+                    return true;
-+                }
-+                if (id == R.id.viewHistory) {
-+                    Toast.makeText(MainActivity.this, "History has been clicked", Toast.LENGTH_LONG).show();
-+                    return true;
-+                }
-+                if (id == R.id.viewAccount) {
-+                    Intent viewAcc = new Intent(ViewAccount.this, ViewAccount.class);
-+                    ViewAccount.this.startActivity(viewAcc);
-+                    return true;
-+                }
-+                return false;
-+
-+            }
-+        });*/
-+
-         final String id = UserID.user_id;
-         db = FirebaseFirestore.getInstance();
-         doc = db.collection("users").document(id);
- 
-         //LOGOUT BUTTON
--        logout = findViewById(R.id.btnLogout);
-+        Button logout = findViewById(R.id.btnLogout);
-         logout.setOnClickListener(new View.OnClickListener() {
-             @Override
-             public void onClick(View v) {
-@@ -43,7 +68,7 @@
-         });
- 
-         //DELETE ACCOUNT BUTTON
--        deleteAcc = findViewById(R.id.btnDeleteAcc);
-+        Button deleteAcc = findViewById(R.id.btnDeleteAcc);
-         deleteAcc.setOnClickListener(new View.OnClickListener() {
-             @Override
-             public void onClick(View v) {
-Index: app/src/main/res/layout/fragment_first.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/layout/fragment_first.xml	(date 1606037758280)
-+++ app/src/main/res/layout/fragment_first.xml	(date 1606037758280)
-@@ -0,0 +1,54 @@
-+<?xml version="1.0" encoding="utf-8"?>
-+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
-+    xmlns:app="http://schemas.android.com/apk/res-auto"
-+    xmlns:tools="http://schemas.android.com/tools"
-+    android:layout_width="match_parent"
-+    android:layout_height="match_parent"
-+    tools:context="com.example.cps731project.MainActivity">
-+
-+    <TextView
-+        android:id="@+id/whatToEat"
-+        android:layout_width="wrap_content"
-+        android:layout_height="wrap_content"
-+        android:layout_marginBottom="395dp"
-+        android:layout_marginTop="168dp"
-+        android:text="@string/whatToEat"
-+        android:textSize="30sp"
-+        app:layout_constraintBottom_toBottomOf="parent"
-+        app:layout_constraintEnd_toEndOf="parent"
-+        app:layout_constraintStart_toStartOf="parent"
-+        app:layout_constraintTop_toTopOf="parent" />
-+
-+    <Spinner
-+        android:id="@+id/mealType"
-+        android:layout_width="226dp"
-+        android:layout_height="52dp"
-+        android:layout_marginBottom="332dp"
-+        android:layout_marginEnd="10dp"
-+        android:layout_marginLeft="37dp"
-+        android:layout_marginRight="10dp"
-+        android:layout_marginStart="37dp"
-+        android:layout_marginTop="16dp"
-+        android:entries="@array/meals"
-+        app:layout_constraintBottom_toBottomOf="parent"
-+        app:layout_constraintEnd_toStartOf="@+id/btnGo"
-+        app:layout_constraintStart_toStartOf="parent"
-+        app:layout_constraintTop_toBottomOf="@+id/whatToEat" />
-+
-+    <Button
-+        android:id="@+id/btnGo"
-+        android:layout_width="91dp"
-+        android:layout_height="53dp"
-+        android:layout_marginBottom="331dp"
-+        android:layout_marginEnd="36dp"
-+        android:layout_marginLeft="10dp"
-+        android:layout_marginRight="36dp"
-+        android:layout_marginStart="10dp"
-+        android:layout_marginTop="16dp"
-+        android:text="@string/btnGo"
-+        app:layout_constraintBottom_toBottomOf="parent"
-+        app:layout_constraintEnd_toEndOf="parent"
-+        app:layout_constraintStart_toEndOf="@+id/mealType"
-+        app:layout_constraintTop_toBottomOf="@+id/whatToEat" />
-+
-+</androidx.constraintlayout.widget.ConstraintLayout>
-\ No newline at end of file
-Index: app/src/main/res/menu/bottom_nav.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<menu xmlns:android=\"http://schemas.android.com/apk/res/android\">\n\n    <item\n        android:id=\"@+id/mainActivity\"\n        android:title=\"@string/home\"\n        android:icon=\"@drawable/ic_home\" />\n\n    <item\n        android:id=\"@+id/viewFavourites\"\n        android:title=\"@string/favourites\"\n        android:icon=\"@drawable/ic_favorite\" />\n    <item\n        android:id=\"@+id/viewHistory\"\n        android:title=\"@string/history\"\n        android:icon=\"@drawable/ic_history\"/>\n    <item\n        android:id=\"@+id/viewAccount\"\n        android:title=\"@string/account\"\n        android:icon=\"@drawable/ic_account\"/>\n</menu>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/menu/bottom_nav.xml	(revision 4aae76b2288305c355e0355ddc4a45783c62a78e)
-+++ app/src/main/res/menu/bottom_nav.xml	(date 1606035998016)
-@@ -2,16 +2,16 @@
- <menu xmlns:android="http://schemas.android.com/apk/res/android">
- 
-     <item
--        android:id="@+id/mainActivity"
-+        android:id="@+id/firstFragment"
-         android:title="@string/home"
-         android:icon="@drawable/ic_home" />
- 
-     <item
--        android:id="@+id/viewFavourites"
-+        android:id="@+id/secondFragment"
-         android:title="@string/favourites"
-         android:icon="@drawable/ic_favorite" />
-     <item
--        android:id="@+id/viewHistory"
-+        android:id="@+id/thirdFragment"
-         android:title="@string/history"
-         android:icon="@drawable/ic_history"/>
-     <item
-Index: app/src/main/java/com/example/cps731project/FirstFragment.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/cps731project/FirstFragment.java	(date 1606034673312)
-+++ app/src/main/java/com/example/cps731project/FirstFragment.java	(date 1606034673312)
-@@ -0,0 +1,63 @@
-+package com.example.cps731project;
-+
-+import android.os.Bundle;
-+import androidx.fragment.app.Fragment;
-+import android.view.LayoutInflater;
-+import android.view.View;
-+import android.view.ViewGroup;
-+
-+/**
-+ * A simple {@link Fragment} subclass.
-+ * Use the {@link FirstFragment#newInstance} factory method to
-+ * create an instance of this fragment.
-+ *
-+ */
-+public class FirstFragment extends Fragment {
-+
-+    // TODO: Rename parameter arguments, choose names that match
-+    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER
-+    private static final String ARG_PARAM1 = "param1";
-+    private static final String ARG_PARAM2 = "param2";
-+
-+    // TODO: Rename and change types of parameters
-+    private String mParam1;
-+    private String mParam2;
-+
-+    /**
-+     * Use this factory method to create a new instance of
-+     * this fragment using the provided parameters.
-+     *
-+     * @param param1 Parameter 1.
-+     * @param param2 Parameter 2.
-+     * @return A new instance of fragment FirstFragment.
-+     */
-+    // TODO: Rename and change types and number of parameters
-+    public static FirstFragment newInstance(String param1, String param2) {
-+        FirstFragment fragment = new FirstFragment();
-+        Bundle args = new Bundle();
-+        args.putString(ARG_PARAM1, param1);
-+        args.putString(ARG_PARAM2, param2);
-+        fragment.setArguments(args);
-+        return fragment;
-+    }
-+
-+    public FirstFragment() {
-+        // Required empty public constructor
-+    }
-+
-+    @Override
-+    public void onCreate(Bundle savedInstanceState) {
-+        super.onCreate(savedInstanceState);
-+        if (getArguments() != null) {
-+            mParam1 = getArguments().getString(ARG_PARAM1);
-+            mParam2 = getArguments().getString(ARG_PARAM2);
-+        }
-+    }
-+
-+    @Override
-+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
-+                             Bundle savedInstanceState) {
-+        // Inflate the layout for this fragment
-+        return inflater.inflate(R.layout.fragment_first, container, false);
-+    }
-+}
-\ No newline at end of file
-Index: app/src/main/java/com/example/cps731project/MainActivity.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.cps731project;\n\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.util.Log;\nimport android.view.MenuItem;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.Spinner;\nimport android.widget.Toast;\n\nimport com.google.android.gms.tasks.OnFailureListener;\nimport com.google.android.gms.tasks.OnSuccessListener;\nimport com.google.android.material.bottomnavigation.BottomNavigationView;\nimport com.google.firebase.firestore.DocumentReference;\nimport com.google.firebase.firestore.FirebaseFirestore;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport androidx.annotation.NonNull;\nimport androidx.appcompat.app.AppCompatActivity;\n\npublic class MainActivity extends AppCompatActivity {\n\n    FirebaseFirestore db = FirebaseFirestore.getInstance();\n    private static final String TAG = \"MainActivity\";\n    private static final String KEY_TITLE = \"mealType\";\n    private Spinner mealType;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        BottomNavigationView bottomNavigationView = findViewById(R.id.bottomNav);\n        bottomNavigationView.setOnNavigationItemSelectedListener(new BottomNavigationView\n                .OnNavigationItemSelectedListener() {\n\n            @Override\n            public boolean onNavigationItemSelected(@NonNull final MenuItem item) {\n                int id = item.getItemId();\n\n                //noinspection SimplifiableIfStatement\n\n                if (id == R.id.mainActivity) {\n\n                    Intent navHome = new Intent(MainActivity.this, MainActivity.class);\n                    MainActivity.this.startActivity(navHome);\n                    return true;\n                }\n\n                if (id == R.id.viewFavourites) {\n                    Toast.makeText(MainActivity.this, \"Favs has been clicked\", Toast.LENGTH_LONG).show();\n                    return true;\n                }\n\n                if (id == R.id.viewHistory) {\n                    Toast.makeText(MainActivity.this, \"History has been clicked\", Toast.LENGTH_LONG).show();\n                    return true;\n                }\n\n                if (id == R.id.viewAccount) {\n                    Intent navLog = new Intent(MainActivity.this, ViewAccount.class);\n                    MainActivity.this.startActivity(navLog);\n                    return true;\n                }\n                return false;\n\n            }\n        });\n        mealType = findViewById(R.id.mealType);\n\n        final String id = UserID.user_id;\n\n        Button goBtn = findViewById(R.id.btnGo);\n        goBtn.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                String chosenMeal = mealType.getSelectedItem().toString();\n\n                Map<String, Object> meal = new HashMap<>();\n                meal.put(KEY_TITLE, chosenMeal);\n                db.collection(\"users\").document(id).collection(\"ingredients\")\n                        .add(meal)\n                        .addOnSuccessListener(new OnSuccessListener<DocumentReference>() {\n                            @Override\n                            public void onSuccess(DocumentReference documentReference) {\n                                //Toast.makeText(MainActivity.this, \"Ingredient Added\", Toast.LENGTH_LONG).show();\n                                startActivity(new Intent(MainActivity.this, IngredientList.class));\n                                Log.d(TAG, \"DocumentSnapshot added with ID: \" + documentReference.getId());\n                            }\n                        })\n                        .addOnFailureListener(new OnFailureListener() {\n                            @Override\n                            public void onFailure(@NonNull Exception e) {\n                                Log.w(TAG, \"Error adding meal type\", e);\n                            }\n                        });\n            }\n        });\n    }\n\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/cps731project/MainActivity.java	(revision 4aae76b2288305c355e0355ddc4a45783c62a78e)
-+++ app/src/main/java/com/example/cps731project/MainActivity.java	(date 1606097269864)
-@@ -3,11 +3,9 @@
- import android.content.Intent;
- import android.os.Bundle;
- import android.util.Log;
--import android.view.MenuItem;
- import android.view.View;
- import android.widget.Button;
- import android.widget.Spinner;
--import android.widget.Toast;
- 
- import com.google.android.gms.tasks.OnFailureListener;
- import com.google.android.gms.tasks.OnSuccessListener;
-@@ -20,6 +18,9 @@
- 
- import androidx.annotation.NonNull;
- import androidx.appcompat.app.AppCompatActivity;
-+import androidx.navigation.NavController;
-+import androidx.navigation.Navigation;
-+import androidx.navigation.ui.NavigationUI;
- 
- public class MainActivity extends AppCompatActivity {
- 
-@@ -33,42 +34,10 @@
-         super.onCreate(savedInstanceState);
-         setContentView(R.layout.activity_main);
- 
--        BottomNavigationView bottomNavigationView = findViewById(R.id.bottomNav);
--        bottomNavigationView.setOnNavigationItemSelectedListener(new BottomNavigationView
--                .OnNavigationItemSelectedListener() {
--
--            @Override
--            public boolean onNavigationItemSelected(@NonNull final MenuItem item) {
--                int id = item.getItemId();
--
--                //noinspection SimplifiableIfStatement
--
--                if (id == R.id.mainActivity) {
-+        /*BottomNavigationView bottomNavigationView = findViewById(R.id.bottomNav);
-+        NavController navController = Navigation.findNavController(this,  R.id.fragmentContainer);
-+        NavigationUI.setupWithNavController(bottomNavigationView, navController);*/
- 
--                    Intent navHome = new Intent(MainActivity.this, MainActivity.class);
--                    MainActivity.this.startActivity(navHome);
--                    return true;
--                }
--
--                if (id == R.id.viewFavourites) {
--                    Toast.makeText(MainActivity.this, "Favs has been clicked", Toast.LENGTH_LONG).show();
--                    return true;
--                }
--
--                if (id == R.id.viewHistory) {
--                    Toast.makeText(MainActivity.this, "History has been clicked", Toast.LENGTH_LONG).show();
--                    return true;
--                }
--
--                if (id == R.id.viewAccount) {
--                    Intent navLog = new Intent(MainActivity.this, ViewAccount.class);
--                    MainActivity.this.startActivity(navLog);
--                    return true;
--                }
--                return false;
--
--            }
--        });
-         mealType = findViewById(R.id.mealType);
- 
-         final String id = UserID.user_id;
-Index: app/src/main/java/com/example/cps731project/ViewFavourites.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.cps731project;\n\nimport android.annotation.SuppressLint;\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.view.MenuItem;\nimport android.widget.Button;\nimport android.widget.TextView;\n\nimport com.google.android.material.bottomnavigation.BottomNavigationView;\n\nimport androidx.annotation.NonNull;\nimport androidx.appcompat.app.AppCompatActivity;\n\npublic class ViewFavourites extends AppCompatActivity {\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_view_favs);\n\n    }\n}\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/cps731project/ViewFavourites.java	(revision 4aae76b2288305c355e0355ddc4a45783c62a78e)
-+++ app/src/main/java/com/example/cps731project/ViewFavourites.java	(date 1606000273140)
-@@ -16,7 +16,7 @@
-     @Override
-     protected void onCreate(Bundle savedInstanceState) {
-         super.onCreate(savedInstanceState);
--        setContentView(R.layout.activity_view_favs);
-+        //setContentView(R.layout.activity_view_favs);
- 
-     }
- }
-Index: app/src/main/java/com/example/cps731project/secondFragment.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/cps731project/secondFragment.java	(date 1606032193703)
-+++ app/src/main/java/com/example/cps731project/secondFragment.java	(date 1606032193703)
-@@ -0,0 +1,64 @@
-+package com.example.cps731project;
-+
-+import android.os.Bundle;
-+
-+import androidx.fragment.app.Fragment;
-+
-+import android.view.LayoutInflater;
-+import android.view.View;
-+import android.view.ViewGroup;
-+
-+/**
-+ * A simple {@link Fragment} subclass.
-+ * Use the {@link secondFragment#newInstance} factory method to
-+ * create an instance of this fragment.
-+ */
-+public class secondFragment extends Fragment {
-+
-+    // TODO: Rename parameter arguments, choose names that match
-+    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER
-+    private static final String ARG_PARAM1 = "param1";
-+    private static final String ARG_PARAM2 = "param2";
-+
-+    // TODO: Rename and change types of parameters
-+    private String mParam1;
-+    private String mParam2;
-+
-+    public secondFragment() {
-+        // Required empty public constructor
-+    }
-+
-+    /**
-+     * Use this factory method to create a new instance of
-+     * this fragment using the provided parameters.
-+     *
-+     * @param param1 Parameter 1.
-+     * @param param2 Parameter 2.
-+     * @return A new instance of fragment secondFragment.
-+     */
-+    // TODO: Rename and change types and number of parameters
-+    public static secondFragment newInstance(String param1, String param2) {
-+        secondFragment fragment = new secondFragment();
-+        Bundle args = new Bundle();
-+        args.putString(ARG_PARAM1, param1);
-+        args.putString(ARG_PARAM2, param2);
-+        fragment.setArguments(args);
-+        return fragment;
-+    }
-+
-+    @Override
-+    public void onCreate(Bundle savedInstanceState) {
-+        super.onCreate(savedInstanceState);
-+        if (getArguments() != null) {
-+            mParam1 = getArguments().getString(ARG_PARAM1);
-+            mParam2 = getArguments().getString(ARG_PARAM2);
-+        }
-+    }
-+
-+    @Override
-+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
-+                             Bundle savedInstanceState) {
-+        // Inflate the layout for this fragment
-+        return inflater.inflate(R.layout.fragment_second, container, false);
-+    }
-+}
-\ No newline at end of file
-Index: app/src/main/res/layout/fragment_second.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/layout/fragment_second.xml	(date 1606037758307)
-+++ app/src/main/res/layout/fragment_second.xml	(date 1606037758307)
-@@ -0,0 +1,57 @@
-+<?xml version="1.0" encoding="utf-8"?>
-+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
-+    xmlns:app="http://schemas.android.com/apk/res-auto"
-+    xmlns:tools="http://schemas.android.com/tools"
-+    android:layout_width="match_parent"
-+    android:layout_height="match_parent"
-+    tools:context="com.example.cps731project.MainActivity">
-+
-+    <TextView
-+        android:id="@+id/favourites"
-+        android:layout_width="392dp"
-+        android:layout_height="47dp"
-+        android:layout_marginBottom="529dp"
-+        android:layout_marginTop="32dp"
-+        android:text="@string/favourites"
-+        android:textSize="30sp"
-+        app:layout_constraintBottom_toBottomOf="parent"
-+        app:layout_constraintEnd_toEndOf="parent"
-+        app:layout_constraintStart_toStartOf="parent"
-+        app:layout_constraintTop_toTopOf="parent" />
-+
-+    <TextView
-+        android:id="@+id/favDescription"
-+        android:layout_width="386dp"
-+        android:layout_height="52dp"
-+        android:layout_marginBottom="474dp"
-+        android:layout_marginEnd="16dp"
-+        android:layout_marginLeft="9dp"
-+        android:layout_marginRight="16dp"
-+        android:layout_marginStart="9dp"
-+        android:layout_marginTop="1dp"
-+        android:text="@string/none"
-+        android:textSize="20sp"
-+        app:layout_constraintBottom_toBottomOf="parent"
-+        app:layout_constraintEnd_toEndOf="parent"
-+        app:layout_constraintStart_toStartOf="parent"
-+        app:layout_constraintTop_toBottomOf="@+id/favourites"
-+        app:layout_constraintVertical_bias="0.0" />
-+
-+    <Button
-+        android:id="@+id/deleteFavs"
-+        android:layout_width="wrap_content"
-+        android:layout_height="wrap_content"
-+        android:layout_marginBottom="425dp"
-+        android:layout_marginEnd="216dp"
-+        android:layout_marginLeft="10dp"
-+        android:layout_marginRight="216dp"
-+        android:layout_marginStart="10dp"
-+        android:text="@string/deleteAll"
-+        app:layout_constraintBottom_toBottomOf="parent"
-+        app:layout_constraintEnd_toEndOf="parent"
-+        app:layout_constraintStart_toStartOf="parent"
-+        app:layout_constraintTop_toBottomOf="@+id/favDescription"
-+        app:layout_constraintVertical_bias="0.0" />
-+
-+
-+</androidx.constraintlayout.widget.ConstraintLayout>
-\ No newline at end of file
-Index: app/src/main/res/layout/activity_main.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<androidx.constraintlayout.widget.ConstraintLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:id=\"@+id/mainActivity\">\n\n    <TextView\n        android:id=\"@+id/whatToEat\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginBottom=\"395dp\"\n        android:layout_marginTop=\"168dp\"\n        android:text=\"@string/whatToEat\"\n        android:textSize=\"30sp\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\" />\n\n    <Spinner\n        android:id=\"@+id/mealType\"\n        android:layout_width=\"226dp\"\n        android:layout_height=\"52dp\"\n        android:layout_marginBottom=\"332dp\"\n        android:layout_marginEnd=\"10dp\"\n        android:layout_marginLeft=\"37dp\"\n        android:layout_marginRight=\"10dp\"\n        android:layout_marginStart=\"37dp\"\n        android:layout_marginTop=\"16dp\"\n        android:entries=\"@array/meals\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toStartOf=\"@+id/btnGo\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/whatToEat\" />\n\n    <Button\n        android:id=\"@+id/btnGo\"\n        android:layout_width=\"91dp\"\n        android:layout_height=\"53dp\"\n        android:layout_marginBottom=\"331dp\"\n        android:layout_marginEnd=\"36dp\"\n        android:layout_marginLeft=\"10dp\"\n        android:layout_marginRight=\"36dp\"\n        android:layout_marginStart=\"10dp\"\n        android:layout_marginTop=\"16dp\"\n        android:text=\"@string/btnGo\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toEndOf=\"@+id/mealType\"\n        app:layout_constraintTop_toBottomOf=\"@+id/whatToEat\" />\n\n    <com.google.android.material.bottomnavigation.BottomNavigationView\n        android:id=\"@+id/bottomNav\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"274dp\"\n        android:background=\"#d3d3d3\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/btnGo\"\n        app:menu=\"@menu/bottom_nav\" />\n\n\n</androidx.constraintlayout.widget.ConstraintLayout>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/layout/activity_main.xml	(revision 4aae76b2288305c355e0355ddc4a45783c62a78e)
-+++ app/src/main/res/layout/activity_main.xml	(date 1606096871942)
-@@ -51,17 +51,5 @@
-         app:layout_constraintStart_toEndOf="@+id/mealType"
-         app:layout_constraintTop_toBottomOf="@+id/whatToEat" />
- 
--    <com.google.android.material.bottomnavigation.BottomNavigationView
--        android:id="@+id/bottomNav"
--        android:layout_width="match_parent"
--        android:layout_height="wrap_content"
--        android:layout_marginTop="274dp"
--        android:background="#d3d3d3"
--        app:layout_constraintBottom_toBottomOf="parent"
--        app:layout_constraintEnd_toEndOf="parent"
--        app:layout_constraintStart_toStartOf="parent"
--        app:layout_constraintTop_toBottomOf="@+id/btnGo"
--        app:menu="@menu/bottom_nav" />
--
- 
- </androidx.constraintlayout.widget.ConstraintLayout>
-\ No newline at end of file
-Index: app/src/main/res/layout/fragment_third.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/layout/fragment_third.xml	(date 1606037758317)
-+++ app/src/main/res/layout/fragment_third.xml	(date 1606037758317)
-@@ -0,0 +1,57 @@
-+<?xml version="1.0" encoding="utf-8"?>
-+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
-+    xmlns:app="http://schemas.android.com/apk/res-auto"
-+    xmlns:tools="http://schemas.android.com/tools"
-+    android:layout_width="match_parent"
-+    android:layout_height="match_parent"
-+    tools:context="com.example.cps731project.MainActivity">
-+
-+    <TextView
-+        android:id="@+id/textView4"
-+        android:layout_width="392dp"
-+        android:layout_height="47dp"
-+        android:layout_marginBottom="529dp"
-+        android:layout_marginTop="32dp"
-+        android:text="@string/history"
-+        android:textSize="30sp"
-+        app:layout_constraintBottom_toBottomOf="parent"
-+        app:layout_constraintEnd_toEndOf="parent"
-+        app:layout_constraintStart_toStartOf="parent"
-+        app:layout_constraintTop_toTopOf="parent" />
-+
-+    <TextView
-+        android:id="@+id/textView"
-+        android:layout_width="386dp"
-+        android:layout_height="52dp"
-+        android:layout_marginBottom="474dp"
-+        android:layout_marginEnd="16dp"
-+        android:layout_marginLeft="9dp"
-+        android:layout_marginRight="16dp"
-+        android:layout_marginStart="9dp"
-+        android:layout_marginTop="1dp"
-+        android:text="@string/none2"
-+        android:textSize="20sp"
-+        app:layout_constraintBottom_toBottomOf="parent"
-+        app:layout_constraintEnd_toEndOf="parent"
-+        app:layout_constraintStart_toStartOf="parent"
-+        app:layout_constraintTop_toBottomOf="@+id/textView4"
-+        app:layout_constraintVertical_bias="0.0" />
-+
-+    <Button
-+        android:id="@+id/button"
-+        android:layout_width="wrap_content"
-+        android:layout_height="wrap_content"
-+        android:layout_marginBottom="425dp"
-+        android:layout_marginEnd="239dp"
-+        android:layout_marginLeft="10dp"
-+        android:layout_marginRight="239dp"
-+        android:layout_marginStart="10dp"
-+        android:text="@string/deleteAll2"
-+        app:layout_constraintBottom_toBottomOf="parent"
-+        app:layout_constraintEnd_toEndOf="parent"
-+        app:layout_constraintStart_toStartOf="parent"
-+        app:layout_constraintTop_toBottomOf="@+id/textView"
-+        app:layout_constraintVertical_bias="0.0" />
-+
-+
-+</androidx.constraintlayout.widget.ConstraintLayout>
-\ No newline at end of file
-Index: app/src/main/java/com/example/cps731project/thirdFragment.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/cps731project/thirdFragment.java	(date 1606035820834)
-+++ app/src/main/java/com/example/cps731project/thirdFragment.java	(date 1606035820834)
-@@ -0,0 +1,64 @@
-+package com.example.cps731project;
-+
-+import android.os.Bundle;
-+
-+import androidx.fragment.app.Fragment;
-+
-+import android.view.LayoutInflater;
-+import android.view.View;
-+import android.view.ViewGroup;
-+
-+/**
-+ * A simple {@link Fragment} subclass.
-+ * Use the {@link thirdFragment#newInstance} factory method to
-+ * create an instance of this fragment.
-+ */
-+public class thirdFragment extends Fragment {
-+
-+    // TODO: Rename parameter arguments, choose names that match
-+    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER
-+    private static final String ARG_PARAM1 = "param1";
-+    private static final String ARG_PARAM2 = "param2";
-+
-+    // TODO: Rename and change types of parameters
-+    private String mParam1;
-+    private String mParam2;
-+
-+    public thirdFragment() {
-+        // Required empty public constructor
-+    }
-+
-+    /**
-+     * Use this factory method to create a new instance of
-+     * this fragment using the provided parameters.
-+     *
-+     * @param param1 Parameter 1.
-+     * @param param2 Parameter 2.
-+     * @return A new instance of fragment thirdFragment.
-+     */
-+    // TODO: Rename and change types and number of parameters
-+    public static thirdFragment newInstance(String param1, String param2) {
-+        thirdFragment fragment = new thirdFragment();
-+        Bundle args = new Bundle();
-+        args.putString(ARG_PARAM1, param1);
-+        args.putString(ARG_PARAM2, param2);
-+        fragment.setArguments(args);
-+        return fragment;
-+    }
-+
-+    @Override
-+    public void onCreate(Bundle savedInstanceState) {
-+        super.onCreate(savedInstanceState);
-+        if (getArguments() != null) {
-+            mParam1 = getArguments().getString(ARG_PARAM1);
-+            mParam2 = getArguments().getString(ARG_PARAM2);
-+        }
-+    }
-+
-+    @Override
-+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
-+                             Bundle savedInstanceState) {
-+        // Inflate the layout for this fragment
-+        return inflater.inflate(R.layout.fragment_third, container, false);
-+    }
-+}
-\ No newline at end of file
-Index: app/src/main/res/navigation/my_nav.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/navigation/my_nav.xml	(date 1606036680288)
-+++ app/src/main/res/navigation/my_nav.xml	(date 1606036680288)
-@@ -0,0 +1,27 @@
-+<?xml version="1.0" encoding="utf-8"?>
-+<navigation xmlns:android="http://schemas.android.com/apk/res/android"
-+    xmlns:app="http://schemas.android.com/apk/res-auto"
-+    xmlns:tools="http://schemas.android.com/tools"
-+    android:id="@+id/my_nav"
-+    app:startDestination="@id/firstFragment">
-+    <fragment
-+        android:id="@+id/firstFragment"
-+        android:name="com.example.cps731project.FirstFragment"
-+        android:label="fragment_first"
-+        tools:layout="@layout/fragment_first" />
-+    <fragment
-+        android:id="@+id/secondFragment"
-+        android:name="com.example.cps731project.secondFragment"
-+        android:label="fragment_second"
-+        tools:layout="@layout/fragment_second" />
-+    <fragment
-+        android:id="@+id/thirdFragment"
-+        android:name="com.example.cps731project.thirdFragment"
-+        android:label="fragment_third"
-+        tools:layout="@layout/fragment_third" />
-+    <activity
-+        android:id="@+id/viewAccount"
-+        android:name="com.example.cps731project.ViewAccount"
-+        android:label="activity_view_account"
-+        tools:layout="@layout/activity_view_account" />
-+</navigation>
-\ No newline at end of file
-Index: app/src/main/res/values/strings.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><resources>\n    <string name=\"app_name\">CPS731Project</string>\n    <string name=\"ezFood\">EZ Food</string>\n    <string name=\"createAccount\">Create An Account</string>\n    <string name=\"email\">Email</string>\n    <string name=\"password\">Password</string>\n    <string name=\"loginHere\">Please Login</string>\n    <string name=\"login\">LOGIN</string>\n    <string name=\"dontHaveAccount\">Don\\'t have an account? Create one here</string>\n    <string name=\"addIngredient\">Add Ingredient</string>\n    <string name=\"btnAdd\">ADD</string>\n    <string name=\"whatToEat\">What do you want to eat?</string>\n    <string name=\"ingredientsYouHave\">Ingredients You Have</string>\n    <string name=\"btnGo\">GO</string>\n    <string name=\"btnLogout\">LOGOUT</string>\n    <string name=\"btnDeleteAcc\">DELETE ACCOUNT</string>\n    <string name=\"myAccount\">My Account</string>\n    <string name=\"account\">Account</string>\n    <string name=\"txtName\">Name</string>\n    <string name=\"txtEmail\">Email</string>\n    <string name=\"txtRatings\">Ratings</string>\n    <string name=\"favourites\">Favourites</string>\n    <string name=\"none\">No favourites yet</string>\n    <string name=\"deleteAll\">DELETE ALL FAVOURITES</string>\n    <string name=\"history\">History</string>\n    <string name=\"none2\">No history yet</string>\n    <string name=\"deleteAll2\">DELETE ALL HISTORY</string>\n    <string name=\"home\">Home</string>\n    <string-array name=\"meals\">\n        <item>Snack</item>\n        <item>Breakfast</item>\n        <item>Lunch</item>\n        <item>Dinner</item>\n    </string-array>\n</resources>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/values/strings.xml	(revision 4aae76b2288305c355e0355ddc4a45783c62a78e)
-+++ app/src/main/res/values/strings.xml	(date 1606030267432)
-@@ -26,6 +26,8 @@
-     <string name="none2">No history yet</string>
-     <string name="deleteAll2">DELETE ALL HISTORY</string>
-     <string name="home">Home</string>
-+    <string name="hello_blank_fragment">Hello blank fragment</string>
-+    <!-- TODO: Remove or change this placeholder text -->
-     <string-array name="meals">
-         <item>Snack</item>
-         <item>Breakfast</item>
Index: app/src/main/res/drawable/bg_round.xml
===================================================================
--- app/src/main/res/drawable/bg_round.xml	(revision c21de9b9ee0e409d6cc551c8d92029896677594f)
+++ app/src/main/res/drawable/bg_round.xml	(revision c21de9b9ee0e409d6cc551c8d92029896677594f)
@@ -1,8 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<shape xmlns:tools="http://schemas.android.com/tools"
-    xmlns:android="http://schemas.android.com/apk/res/android" >
-    <solid android:color="@android:color/white"/>
-    <stroke android:width="3dp" android:color="@android:color/holo_green_light" />
-    <corners android:radius="8dp" />
-
-</shape>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_2020-11-22_9_27_PM__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_2020-11-22_9_27_PM__Default_Changelist_.xml	(revision c21de9b9ee0e409d6cc551c8d92029896677594f)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_2020-11-22_9_27_PM__Default_Changelist_.xml	(revision c21de9b9ee0e409d6cc551c8d92029896677594f)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_2020-11-22_9_27_PM_[Default_Changelist]" date="1606098485911" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2020-11-22_9_27_PM_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 2020-11-22 9:27 PM [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: app/src/main/java/com/example/cps731project/ViewHistory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cps731project;\n\nimport androidx.annotation.NonNull;\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport android.annotation.SuppressLint;\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.view.MenuItem;\n\nimport com.google.android.material.bottomnavigation.BottomNavigationView;\n\npublic class ViewHistory extends AppCompatActivity {\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_view_history);\n\n        BottomNavigationView bottomNavigationView = findViewById(R.id.bottomNav);\n        bottomNavigationView.setSelectedItemId(R.id.viewHistory);\n        bottomNavigationView.setOnNavigationItemSelectedListener(new BottomNavigationView.OnNavigationItemSelectedListener() {\n            @SuppressLint(\"NonConstantResourceId\")\n            @Override\n            public boolean onNavigationItemSelected(@NonNull MenuItem item) {\n                switch (item.getItemId()) {\n                    case R.id.mainActivity:\n                        startActivity(new Intent(getApplicationContext(), MainActivity.class));\n                        overridePendingTransition(0, 0);\n                        return true;\n                    case R.id.grocery:\n                        startActivity(new Intent(getApplicationContext(), MapsActivity.class));\n                        overridePendingTransition(0, 0);\n                        return true;\n                    case R.id.viewFavourites:\n                        startActivity(new Intent(getApplicationContext(), ViewFavourites.class));\n                        overridePendingTransition(0, 0);\n                        return true;\n                    case R.id.viewHistory:\n                        return true;\n                    case R.id.viewAccount:\n                        startActivity(new Intent(getApplicationContext(), ViewAccount.class));\n                        overridePendingTransition(0, 0);\n                        return true;\n                }\n                return false;\n            }\n        });\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/cps731project/ViewHistory.java	(revision c21de9b9ee0e409d6cc551c8d92029896677594f)
+++ app/src/main/java/com/example/cps731project/ViewHistory.java	(date 1606701613649)
@@ -29,7 +29,7 @@
                         overridePendingTransition(0, 0);
                         return true;
                     case R.id.grocery:
-                        startActivity(new Intent(getApplicationContext(), MapsActivity.class));
+                        startActivity(new Intent(getApplicationContext(), TestActivity.class));
                         overridePendingTransition(0, 0);
                         return true;
                     case R.id.viewFavourites:
Index: app/src/main/res/drawable/ic_search.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_search.xml	(date 1606705310664)
+++ app/src/main/res/drawable/ic_search.xml	(date 1606705310664)
@@ -0,0 +1,10 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24"
+    android:tint="?attr/colorControlNormal">
+  <path
+      android:fillColor="@android:color/white"
+      android:pathData="M15.5,14h-0.79l-0.28,-0.27C15.41,12.59 16,11.11 16,9.5 16,5.91 13.09,3 9.5,3S3,5.91 3,9.5 5.91,16 9.5,16c1.61,0 3.09,-0.59 4.23,-1.57l0.27,0.28v0.79l5,4.99L20.49,19l-4.99,-5zM9.5,14C7.01,14 5,11.99 5,9.5S7.01,5 9.5,5 14,7.01 14,9.5 11.99,14 9.5,14z"/>
+</vector>
Index: .idea/jarRepositories.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"RemoteRepositoriesConfiguration\">\n    <remote-repository>\n      <option name=\"id\" value=\"central\" />\n      <option name=\"name\" value=\"Maven Central repository\" />\n      <option name=\"url\" value=\"https://repo1.maven.org/maven2\" />\n    </remote-repository>\n    <remote-repository>\n      <option name=\"id\" value=\"jboss.community\" />\n      <option name=\"name\" value=\"JBoss Community repository\" />\n      <option name=\"url\" value=\"https://repository.jboss.org/nexus/content/repositories/public/\" />\n    </remote-repository>\n    <remote-repository>\n      <option name=\"id\" value=\"BintrayJCenter\" />\n      <option name=\"name\" value=\"BintrayJCenter\" />\n      <option name=\"url\" value=\"https://jcenter.bintray.com/\" />\n    </remote-repository>\n    <remote-repository>\n      <option name=\"id\" value=\"Google\" />\n      <option name=\"name\" value=\"Google\" />\n      <option name=\"url\" value=\"https://dl.google.com/dl/android/maven2/\" />\n    </remote-repository>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/jarRepositories.xml	(revision c21de9b9ee0e409d6cc551c8d92029896677594f)
+++ .idea/jarRepositories.xml	(date 1606729776786)
@@ -21,5 +21,10 @@
       <option name="name" value="Google" />
       <option name="url" value="https://dl.google.com/dl/android/maven2/" />
     </remote-repository>
+    <remote-repository>
+      <option name="id" value="maven" />
+      <option name="name" value="maven" />
+      <option name="url" value="https://maven.google.com" />
+    </remote-repository>
   </component>
 </project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" default=\"true\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\n  </component>\n  <component name=\"ProjectType\">\n    <option name=\"id\" value=\"Android\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision c21de9b9ee0e409d6cc551c8d92029896677594f)
+++ .idea/misc.xml	(date 1606733738235)
@@ -1,5 +1,48 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="NullableNotNullManager">
+    <option name="myDefaultNullable" value="androidx.annotation.Nullable" />
+    <option name="myDefaultNotNull" value="androidx.annotation.NonNull" />
+    <option name="myNullables">
+      <value>
+        <list size="14">
+          <item index="0" class="java.lang.String" itemvalue="org.jetbrains.annotations.Nullable" />
+          <item index="1" class="java.lang.String" itemvalue="edu.umd.cs.findbugs.annotations.Nullable" />
+          <item index="2" class="java.lang.String" itemvalue="android.support.annotation.Nullable" />
+          <item index="3" class="java.lang.String" itemvalue="androidx.annotation.Nullable" />
+          <item index="4" class="java.lang.String" itemvalue="androidx.annotation.RecentlyNullable" />
+          <item index="5" class="java.lang.String" itemvalue="com.android.annotations.Nullable" />
+          <item index="6" class="java.lang.String" itemvalue="javax.annotation.Nullable" />
+          <item index="7" class="java.lang.String" itemvalue="javax.annotation.CheckForNull" />
+          <item index="8" class="java.lang.String" itemvalue="org.checkerframework.checker.nullness.qual.Nullable" />
+          <item index="9" class="java.lang.String" itemvalue="org.checkerframework.checker.nullness.compatqual.NullableDecl" />
+          <item index="10" class="java.lang.String" itemvalue="org.checkerframework.checker.nullness.compatqual.NullableType" />
+          <item index="11" class="java.lang.String" itemvalue="org.eclipse.jdt.annotation.Nullable" />
+          <item index="12" class="java.lang.String" itemvalue="io.reactivex.annotations.Nullable" />
+          <item index="13" class="java.lang.String" itemvalue="io.reactivex.rxjava3.annotations.Nullable" />
+        </list>
+      </value>
+    </option>
+    <option name="myNotNulls">
+      <value>
+        <list size="13">
+          <item index="0" class="java.lang.String" itemvalue="org.jetbrains.annotations.NotNull" />
+          <item index="1" class="java.lang.String" itemvalue="edu.umd.cs.findbugs.annotations.NonNull" />
+          <item index="2" class="java.lang.String" itemvalue="android.support.annotation.NonNull" />
+          <item index="3" class="java.lang.String" itemvalue="androidx.annotation.NonNull" />
+          <item index="4" class="java.lang.String" itemvalue="androidx.annotation.RecentlyNonNull" />
+          <item index="5" class="java.lang.String" itemvalue="com.android.annotations.NonNull" />
+          <item index="6" class="java.lang.String" itemvalue="javax.annotation.Nonnull" />
+          <item index="7" class="java.lang.String" itemvalue="org.checkerframework.checker.nullness.qual.NonNull" />
+          <item index="8" class="java.lang.String" itemvalue="org.checkerframework.checker.nullness.compatqual.NonNullDecl" />
+          <item index="9" class="java.lang.String" itemvalue="org.checkerframework.checker.nullness.compatqual.NonNullType" />
+          <item index="10" class="java.lang.String" itemvalue="org.eclipse.jdt.annotation.NonNull" />
+          <item index="11" class="java.lang.String" itemvalue="io.reactivex.annotations.NonNull" />
+          <item index="12" class="java.lang.String" itemvalue="io.reactivex.rxjava3.annotations.NonNull" />
+        </list>
+      </value>
+    </option>
+  </component>
   <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
Index: app/src/main/res/drawable/white_border.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/white_border.xml	(date 1606705580143)
+++ app/src/main/res/drawable/white_border.xml	(date 1606705580143)
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <item>
+        <shape android:shape="rectangle">
+            <solid android:color="#fff"/>
+            <corners android:radius="5dp"/>
+        </shape>
+    </item>
+
+</layer-list>
\ No newline at end of file
Index: app/src/main/java/com/example/cps731project/ViewFavourites.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cps731project;\n\nimport androidx.annotation.NonNull;\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport android.annotation.SuppressLint;\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.view.MenuItem;\n\nimport com.google.android.material.bottomnavigation.BottomNavigationView;\n\npublic class ViewFavourites extends AppCompatActivity {\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_view_favourites);\n\n        BottomNavigationView bottomNavigationView = findViewById(R.id.bottomNav);\n        bottomNavigationView.setSelectedItemId(R.id.viewFavourites);\n        bottomNavigationView.setOnNavigationItemSelectedListener(new BottomNavigationView.OnNavigationItemSelectedListener() {\n            @SuppressLint(\"NonConstantResourceId\")\n            @Override\n            public boolean onNavigationItemSelected(@NonNull MenuItem item) {\n                switch (item.getItemId()) {\n                    case R.id.mainActivity:\n                        startActivity(new Intent(getApplicationContext(), MainActivity.class));\n                        overridePendingTransition(0, 0);\n                        return true;\n                    case R.id.grocery:\n                        startActivity(new Intent(getApplicationContext(), MapsActivity.class));\n                        overridePendingTransition(0, 0);\n                        return true;\n                    case R.id.viewFavourites:\n                        return true;\n                    case R.id.viewHistory:\n                        startActivity(new Intent(getApplicationContext(), ViewHistory.class));\n                        overridePendingTransition(0, 0);\n                        return true;\n                    case R.id.viewAccount:\n                        startActivity(new Intent(getApplicationContext(), ViewAccount.class));\n                        overridePendingTransition(0, 0);\n                        return true;\n                }\n                return false;\n            }\n        });\n\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/cps731project/ViewFavourites.java	(revision c21de9b9ee0e409d6cc551c8d92029896677594f)
+++ app/src/main/java/com/example/cps731project/ViewFavourites.java	(date 1606701613704)
@@ -29,7 +29,7 @@
                         overridePendingTransition(0, 0);
                         return true;
                     case R.id.grocery:
-                        startActivity(new Intent(getApplicationContext(), MapsActivity.class));
+                        startActivity(new Intent(getApplicationContext(), TestActivity.class));
                         overridePendingTransition(0, 0);
                         return true;
                     case R.id.viewFavourites:
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// Top-level build file where you can add configuration options common to all sub-projects/modules.\nbuildscript {\n    repositories {\n        google()\n        jcenter()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:4.1.1'\n        classpath 'com.google.gms:google-services:4.3.4'\n        // NOTE: Do not place your application dependencies here; they belong\n        // in the individual module build.gradle files\n    }\n}\n\nallprojects {\n    repositories {\n        google()\n        jcenter()\n    }\n}\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- build.gradle	(revision c21de9b9ee0e409d6cc551c8d92029896677594f)
+++ build.gradle	(date 1606729693077)
@@ -16,6 +16,9 @@
     repositories {
         google()
         jcenter()
+        maven{
+            url "https://maven.google.com"
+        }
     }
 }
 
Index: app/src/main/res/drawable-anydpi/ic_gps2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable-anydpi/ic_gps2.xml	(date 1606729270670)
+++ app/src/main/res/drawable-anydpi/ic_gps2.xml	(date 1606729270670)
@@ -0,0 +1,16 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24"
+    android:tint="#000000"
+    android:alpha="0.8">
+  <group android:scaleX="1.1111112"
+      android:scaleY="1.1111112"
+      android:translateX="-1.3333334"
+      android:translateY="-1.3333334">
+    <path
+        android:fillColor="@android:color/white"
+        android:pathData="M12,8c-2.21,0 -4,1.79 -4,4s1.79,4 4,4 4,-1.79 4,-4 -1.79,-4 -4,-4zM20.94,11c-0.46,-4.17 -3.77,-7.48 -7.94,-7.94L13,1h-2v2.06C6.83,3.52 3.52,6.83 3.06,11L1,11v2h2.06c0.46,4.17 3.77,7.48 7.94,7.94L11,23h2v-2.06c4.17,-0.46 7.48,-3.77 7.94,-7.94L23,13v-2h-2.06zM12,19c-3.87,0 -7,-3.13 -7,-7s3.13,-7 7,-7 7,3.13 7,7 -3.13,7 -7,7z"/>
+  </group>
+</vector>
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.application'\napply plugin: 'com.google.gms.google-services'\n\nandroid {\n    compileSdkVersion 30\n    buildToolsVersion \"30.0.2\"\n\n    defaultConfig {\n        applicationId \"com.example.cps731project\"\n        minSdkVersion 16\n        multiDexEnabled true\n        targetSdkVersion 30\n        versionCode 1\n        versionName \"1.0\"\n\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\n    }\n\n    buildTypes {\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\n        }\n    }\n}\n\ndependencies {\n    implementation fileTree(dir: \"libs\", include: [\"*.jar\"])\n    implementation 'androidx.appcompat:appcompat:1.2.0'\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'\n    implementation 'com.google.firebase:firebase-auth:20.0.1'\n    implementation 'com.google.android.material:material:1.2.1'\n    implementation 'androidx.navigation:navigation-fragment:2.3.1'\n    implementation 'androidx.navigation:navigation-ui:2.3.1'\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\n    implementation 'androidx.recyclerview:recyclerview:1.1.0'\n    implementation 'com.google.android.gms:play-services-maps:17.0.0'\n    testImplementation 'junit:junit:4.12'\n    androidTestImplementation 'androidx.test.ext:junit:1.1.2'\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\n    implementation platform('com.google.firebase:firebase-bom:26.0.0')\n    implementation 'com.google.firebase:firebase-analytics'\n    implementation 'com.google.firebase:firebase-firestore:22.0.0'\n    implementation 'com.android.support:multidex:1.0.3'\n    implementation 'com.firebaseui:firebase-ui-firestore:6.2.1'\n    implementation 'com.google.maps:google-maps-services:0.11.0'\n    androidTestImplementation 'androidx.test:rules:1.3.0-beta01'\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision c21de9b9ee0e409d6cc551c8d92029896677594f)
+++ app/build.gradle	(date 1606735644953)
@@ -2,6 +2,7 @@
 apply plugin: 'com.google.gms.google-services'
 
 android {
+
     compileSdkVersion 30
     buildToolsVersion "30.0.2"
 
@@ -14,6 +15,13 @@
         versionName "1.0"
 
         testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
+
+        // Read the API key from ./secure.properties into R.string.maps_api_key
+        def secureProps = new Properties()
+        if (file("../secure.properties").exists()) {
+            file("../secure.properties")?.withInputStream { secureProps.load(it) }
+        }
+        resValue "string", "maps_api_key", (secureProps.getProperty("MAPS_API_KEY") ?: "")
     }
 
     buildTypes {
@@ -38,11 +46,15 @@
     testImplementation 'junit:junit:4.12'
     androidTestImplementation 'androidx.test.ext:junit:1.1.2'
     androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
-    implementation platform('com.google.firebase:firebase-bom:26.0.0')
+    implementation platform('com.google.firebase:firebase-bom:26.1.0')
     implementation 'com.google.firebase:firebase-analytics'
+    //implementation 'com.google.firebase:firebase-analytics:18.0.0'
     implementation 'com.google.firebase:firebase-firestore:22.0.0'
     implementation 'com.android.support:multidex:1.0.3'
     implementation 'com.firebaseui:firebase-ui-firestore:6.2.1'
-    implementation 'com.google.maps:google-maps-services:0.11.0'
-    androidTestImplementation 'androidx.test:rules:1.3.0-beta01'
+    //implementation 'com.google.maps:google-maps-services:0.11.0'
+    implementation 'com.google.android.libraries.places:places:2.4.0'
+    implementation 'com.google.android.gms:play-services-location:17.1.0'
+    implementation 'com.google.android.gms:play-services-basement:17.5.0'
+    androidTestImplementation 'androidx.test:rules:1.3.1-alpha02'
 }
\ No newline at end of file
Index: app/src/main/res/layout-v21/activity_maps.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:map=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    tools:context=\".MapsActivity\" >\n\n    <fragment\n    android:id=\"@+id/map\"\n    android:name=\"com.google.android.gms.maps.SupportMapFragment\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\" />\n\n    <androidx.appcompat.widget.SearchView\n        android:id=\"@+id/sv_location\"\n        android:hint=\"Search...\"\n        android:autofillHints=\"\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_margin=\"10dp\"\n        android:elevation=\"5dp\"\n        android:background=\"@drawable/bg_round\"/>\n\n\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout-v21/activity_maps.xml	(revision c21de9b9ee0e409d6cc551c8d92029896677594f)
+++ app/src/main/res/layout-v21/activity_maps.xml	(date 1606707238248)
@@ -1,6 +1,5 @@
 <?xml version="1.0" encoding="utf-8"?>
 <RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:map="http://schemas.android.com/apk/res-auto"
     xmlns:tools="http://schemas.android.com/tools"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
@@ -12,15 +11,40 @@
     android:layout_width="match_parent"
     android:layout_height="match_parent" />
 
-    <androidx.appcompat.widget.SearchView
-        android:id="@+id/sv_location"
-        android:hint="Search..."
-        android:autofillHints=""
+    <RelativeLayout
         android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_margin="10dp"
-        android:elevation="5dp"
-        android:background="@drawable/bg_round"/>
+        android:layout_height="50dp"
+        android:layout_marginTop="10dp"
+        android:layout_marginRight="10dp"
+        android:layout_marginLeft="10dp"
+        android:elevation="10dp"
+        android:background="@drawable/white_border"
+        android:id="@+id/relLayout1">
+
+        <ImageView
+            android:layout_width="15dp"
+            android:layout_height="15dp"
+            android:id="@+id/ic_search"
+            android:layout_centerVertical="true"
+            android:layout_marginLeft="10dp"
+            android:src="@drawable/ic_search"
+            android:contentDescription="@string/todo"
+            android:layout_marginStart="10dp" />
+        <EditText
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:layout_toRightOf="@+id/ic_search"
+            android:layout_centerVertical="true"
+            android:textSize="15sp"
+            android:textColor="#000"
+            android:id="@+id/input_search"
+            android:background="@null"
+            android:hint="@string/search"
+            android:imeOptions="actionSearch"
+            android:autofillHints=""
+            android:inputType="text"
+            android:layout_toEndOf="@+id/ic_search" />
+    </RelativeLayout>
 
 
 </RelativeLayout>
\ No newline at end of file
Index: secure.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
--- secure.properties	(date 1606698759917)
+++ secure.properties	(date 1606698759917)
@@ -0,0 +1,1 @@
+MAPS_API_KEY=AIzaSyDWHO_FCvrTx_oQR9sS42V4HyQ_S-6k3VY
\ No newline at end of file
Index: app/src/main/res/layout/activity_test.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_test.xml	(date 1606747023074)
+++ app/src/main/res/layout/activity_test.xml	(date 1606747023074)
@@ -0,0 +1,50 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".TestActivity">
+
+
+    <TextView
+        android:id="@+id/textView5"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginBottom="20dp"
+        android:textAlignment="center"
+        android:gravity="center"
+        android:text="@string/click"
+        android:textSize="25dp"
+        app:layout_constraintBottom_toTopOf="@+id/btnMap"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent" />
+
+    <Button
+        android:id="@+id/btnMap"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginBottom="380dp"
+        android:layout_marginEnd="153dp"
+        android:layout_marginLeft="152dp"
+        android:layout_marginRight="153dp"
+        android:layout_marginStart="152dp"
+        android:layout_marginTop="379dp"
+        android:text="@string/search"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+
+    <com.google.android.material.bottomnavigation.BottomNavigationView
+        android:id="@+id/bottomNav"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="274dp"
+        android:background="#d3d3d3"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/btnGo"
+        app:menu="@menu/bottom_nav" />
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/cps731project/TestActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/cps731project/TestActivity.java	(date 1606747161652)
+++ app/src/main/java/com/example/cps731project/TestActivity.java	(date 1606747161652)
@@ -0,0 +1,95 @@
+package com.example.cps731project;
+
+import androidx.annotation.NonNull;
+import androidx.appcompat.app.AppCompatActivity;
+
+import android.annotation.SuppressLint;
+import android.app.Dialog;
+import android.content.Intent;
+import android.os.Bundle;
+import android.util.Log;
+import android.view.MenuItem;
+import android.view.View;
+import android.widget.Button;
+import android.widget.Toast;
+
+import com.google.android.gms.common.ConnectionResult;
+import com.google.android.gms.common.GoogleApiAvailability;
+import com.google.android.material.bottomnavigation.BottomNavigationView;
+
+public class TestActivity extends AppCompatActivity {
+    private static final String TAG = "TestActivity";
+    private static final int ERROR_DIALOG_REQUEST = 9001;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_test);
+
+        BottomNavigationView bottomNavigationView = findViewById(R.id.bottomNav);
+        bottomNavigationView.setSelectedItemId(R.id.grocery);
+        bottomNavigationView.setOnNavigationItemSelectedListener(new BottomNavigationView.OnNavigationItemSelectedListener() {
+            @SuppressLint("NonConstantResourceId")
+            @Override
+            public boolean onNavigationItemSelected(@NonNull MenuItem item) {
+                switch (item.getItemId()) {
+                    case R.id.mainActivity:
+                        startActivity(new Intent(getApplicationContext(), MainActivity.class));
+                        overridePendingTransition(0, 0);
+                        return true;
+                    case R.id.grocery:
+                        return true;
+                    case R.id.viewFavourites:
+                        startActivity(new Intent(getApplicationContext(), ViewFavourites.class));
+                        overridePendingTransition(0, 0);
+                        return true;
+                    case R.id.viewHistory:
+                        startActivity(new Intent(getApplicationContext(), ViewHistory.class));
+                        overridePendingTransition(0, 0);
+                        return true;
+                    case R.id.viewAccount:
+                        startActivity(new Intent(getApplicationContext(), ViewAccount.class));
+                        overridePendingTransition(0, 0);
+                        return true;
+                }
+                return false;
+            }
+        });
+
+        if(isServicesOK()) {
+            init();
+        }
+    }
+
+    private void init () {
+
+        Button btnMap = (Button) findViewById(R.id.btnMap);
+        btnMap.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                Intent intent = new Intent(TestActivity.this, MapsActivity.class);
+                startActivity(intent);
+            }
+        });
+    }
+
+    public boolean isServicesOK() {
+        Log.d(TAG, "isServicesOK: checking google services version");
+        int available = GoogleApiAvailability.getInstance().isGooglePlayServicesAvailable(TestActivity.this);
+        if(available == ConnectionResult.SUCCESS) {
+            //everything is fine and user can ake map requests
+            Log.d(TAG, "isServicesOK: Google Play Services is working");
+            return true;
+        }
+        else if (GoogleApiAvailability.getInstance().isUserResolvableError(available)) {
+            //an error occurred but we can resolve it
+            Log.d(TAG, "isServicesOK: an error occurred but we can fix it");
+            Dialog dialog = GoogleApiAvailability.getInstance().getErrorDialog(TestActivity.this, available, ERROR_DIALOG_REQUEST);
+            dialog.show();
+        }
+        else {
+            Toast.makeText(this, "You can't make map requests", Toast.LENGTH_SHORT).show();
+        }
+        return false;
+    }
+}
\ No newline at end of file
